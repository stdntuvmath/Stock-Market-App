<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Alpaca.Markets</name>
    </assembly>
    <members>
        <member name="T:Alpaca.Markets.AlpacaDataClient">
            <summary>
            Provides unified type-safe access for Alpaca Data API via HTTP/REST.
            </summary>
        </member>
        <member name="M:Alpaca.Markets.AlpacaDataClient.#ctor(Alpaca.Markets.AlpacaDataClientConfiguration)">
            <summary>
            Creates new instance of <see cref="T:Alpaca.Markets.AlpacaDataClient"/> object.
            </summary>
            <param name="configuration">Configuration parameters object.</param>
        </member>
        <member name="M:Alpaca.Markets.AlpacaDataClient.Dispose">
            <inheritdoc />
        </member>
        <member name="M:Alpaca.Markets.AlpacaDataClient.GetBarSetAsync(Alpaca.Markets.BarSetRequest,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Alpaca.Markets.AlpacaDataClient.GetLastTradeAsync(System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Alpaca.Markets.AlpacaDataClient.GetLastQuoteAsync(System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="T:Alpaca.Markets.AlpacaDataStreamingClient">
            <summary>
            Provides unified type-safe access for Alpaca data streaming API via websockets.
            </summary>
        </member>
        <member name="M:Alpaca.Markets.AlpacaDataStreamingClient.#ctor(Alpaca.Markets.AlpacaDataStreamingClientConfiguration)">
            <summary>
            Creates new instance of <see cref="T:Alpaca.Markets.AlpacaDataStreamingClient"/> object.
            </summary>
            <param name="configuration">Configuration parameters object.</param>
        </member>
        <member name="M:Alpaca.Markets.AlpacaDataStreamingClient.GetTradeSubscription(System.String)">
            <inheritdoc />
        </member>
        <member name="M:Alpaca.Markets.AlpacaDataStreamingClient.GetQuoteSubscription(System.String)">
            <inheritdoc />
        </member>
        <member name="M:Alpaca.Markets.AlpacaDataStreamingClient.GetMinuteAggSubscription">
            <inheritdoc />
        </member>
        <member name="M:Alpaca.Markets.AlpacaDataStreamingClient.GetMinuteAggSubscription(System.String)">
            <inheritdoc />
        </member>
        <member name="M:Alpaca.Markets.AlpacaDataStreamingClient.Subscribe(Alpaca.Markets.IAlpacaDataSubscription)">
            <inheritdoc />
        </member>
        <member name="M:Alpaca.Markets.AlpacaDataStreamingClient.Subscribe(Alpaca.Markets.IAlpacaDataSubscription[])">
            <inheritdoc />
        </member>
        <member name="M:Alpaca.Markets.AlpacaDataStreamingClient.Subscribe(System.Collections.Generic.IEnumerable{Alpaca.Markets.IAlpacaDataSubscription})">
            <inheritdoc />
        </member>
        <member name="M:Alpaca.Markets.AlpacaDataStreamingClient.Unsubscribe(Alpaca.Markets.IAlpacaDataSubscription)">
            <inheritdoc />
        </member>
        <member name="M:Alpaca.Markets.AlpacaDataStreamingClient.Unsubscribe(Alpaca.Markets.IAlpacaDataSubscription[])">
            <inheritdoc />
        </member>
        <member name="M:Alpaca.Markets.AlpacaDataStreamingClient.Unsubscribe(System.Collections.Generic.IEnumerable{Alpaca.Markets.IAlpacaDataSubscription})">
            <inheritdoc />
        </member>
        <member name="M:Alpaca.Markets.AlpacaDataStreamingClient.OnOpened">
            <inheritdoc/>
        </member>
        <member name="M:Alpaca.Markets.AlpacaDataStreamingClient.OnMessageReceived(System.String)">
            <inheritdoc/>
        </member>
        <member name="T:Alpaca.Markets.AlpacaStreamingClient">
            <summary>
            Provides unified type-safe access for Alpaca streaming API.
            </summary>
        </member>
        <member name="M:Alpaca.Markets.AlpacaStreamingClient.#ctor(Alpaca.Markets.AlpacaStreamingClientConfiguration)">
            <summary>
            Creates new instance of <see cref="T:Alpaca.Markets.AlpacaStreamingClient"/> object.
            </summary>
            <param name="configuration">Configuration parameters object.</param>
        </member>
        <member name="E:Alpaca.Markets.AlpacaStreamingClient.OnAccountUpdate">
            <inheritdoc />
        </member>
        <member name="E:Alpaca.Markets.AlpacaStreamingClient.OnTradeUpdate">
            <inheritdoc />
        </member>
        <member name="M:Alpaca.Markets.AlpacaStreamingClient.OnOpened">
            <inheritdoc/>
        </member>
        <member name="M:Alpaca.Markets.AlpacaStreamingClient.OnMessageReceived(System.String)">
            <inheritdoc/>
        </member>
        <member name="T:Alpaca.Markets.AlpacaTradingClient">
            <summary>
            Provides unified type-safe access for Alpaca Trading API via HTTP/REST.
            </summary>
        </member>
        <member name="M:Alpaca.Markets.AlpacaTradingClient.#ctor(Alpaca.Markets.AlpacaTradingClientConfiguration)">
            <summary>
            Creates new instance of <see cref="T:Alpaca.Markets.AlpacaTradingClient"/> object.
            </summary>
            <param name="configuration">Configuration parameters object.</param>
        </member>
        <member name="M:Alpaca.Markets.AlpacaTradingClient.Dispose">
            <inheritdoc />
        </member>
        <member name="M:Alpaca.Markets.AlpacaTradingClient.GetAccountAsync(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Alpaca.Markets.AlpacaTradingClient.GetAccountConfigurationAsync(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Alpaca.Markets.AlpacaTradingClient.PatchAccountConfigurationAsync(Alpaca.Markets.IAccountConfiguration,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Alpaca.Markets.AlpacaTradingClient.ListAccountActivitiesAsync(Alpaca.Markets.AccountActivitiesRequest,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Alpaca.Markets.AlpacaTradingClient.GetPortfolioHistoryAsync(Alpaca.Markets.PortfolioHistoryRequest,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Alpaca.Markets.AlpacaTradingClient.ListAssetsAsync(Alpaca.Markets.AssetsRequest,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Alpaca.Markets.AlpacaTradingClient.GetAssetAsync(System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Alpaca.Markets.AlpacaTradingClient.ListPositionsAsync(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Alpaca.Markets.AlpacaTradingClient.GetPositionAsync(System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Alpaca.Markets.AlpacaTradingClient.DeleteAllPositionsAsync(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Alpaca.Markets.AlpacaTradingClient.DeletePositionAsync(Alpaca.Markets.DeletePositionRequest,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Alpaca.Markets.AlpacaTradingClient.GetClockAsync(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Alpaca.Markets.AlpacaTradingClient.ListCalendarAsync(Alpaca.Markets.CalendarRequest,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Alpaca.Markets.AlpacaTradingClient.ListOrdersAsync(Alpaca.Markets.ListOrdersRequest,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Alpaca.Markets.AlpacaTradingClient.PostOrderAsync(Alpaca.Markets.NewOrderRequest,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Alpaca.Markets.AlpacaTradingClient.PostOrderAsync(Alpaca.Markets.OrderBase,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Alpaca.Markets.AlpacaTradingClient.PatchOrderAsync(Alpaca.Markets.ChangeOrderRequest,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Alpaca.Markets.AlpacaTradingClient.GetOrderAsync(System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Alpaca.Markets.AlpacaTradingClient.GetOrderAsync(System.Guid,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Alpaca.Markets.AlpacaTradingClient.DeleteOrderAsync(System.Guid,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Alpaca.Markets.AlpacaTradingClient.DeleteAllOrdersAsync(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Alpaca.Markets.AlpacaTradingClient.ListWatchListsAsync(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Alpaca.Markets.AlpacaTradingClient.CreateWatchListAsync(Alpaca.Markets.NewWatchListRequest,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Alpaca.Markets.AlpacaTradingClient.GetWatchListByIdAsync(System.Guid,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Alpaca.Markets.AlpacaTradingClient.GetWatchListByNameAsync(System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Alpaca.Markets.AlpacaTradingClient.UpdateWatchListByIdAsync(Alpaca.Markets.UpdateWatchListRequest,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Alpaca.Markets.AlpacaTradingClient.AddAssetIntoWatchListByIdAsync(Alpaca.Markets.ChangeWatchListRequest{System.Guid},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Alpaca.Markets.AlpacaTradingClient.AddAssetIntoWatchListByNameAsync(Alpaca.Markets.ChangeWatchListRequest{System.String},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Alpaca.Markets.AlpacaTradingClient.DeleteAssetFromWatchListByIdAsync(Alpaca.Markets.ChangeWatchListRequest{System.Guid},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Alpaca.Markets.AlpacaTradingClient.DeleteAssetFromWatchListByNameAsync(Alpaca.Markets.ChangeWatchListRequest{System.String},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Alpaca.Markets.AlpacaTradingClient.DeleteWatchListByIdAsync(System.Guid,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Alpaca.Markets.AlpacaTradingClient.DeleteWatchListByNameAsync(System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Alpaca.Markets.AlpacaTradingClient.DeletePositionAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Liquidate an open position at market price using Alpaca REST API endpoint.
            </summary>
            <param name="symbol">Symbol for liquidation.</param>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
            <returns><c>True</c> if position liquidation was accepted.</returns>
        </member>
        <member name="M:Alpaca.Markets.AlpacaTradingClient.ListAllAssetsAsync(System.Threading.CancellationToken)">
            <summary>
            Gets list of all available assets from Alpaca REST API endpoint.
            </summary>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
            <returns>Read-only list of asset information objects.</returns>
        </member>
        <member name="M:Alpaca.Markets.AlpacaTradingClient.ListAllCalendarAsync(System.Threading.CancellationToken)">
            <summary>
            Gets list of all trading days from Alpaca REST API endpoint.
            </summary>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
            <returns>Read-only list of trading date information object.</returns>
        </member>
        <member name="M:Alpaca.Markets.AlpacaTradingClient.ListAllOrdersAsync(System.Threading.CancellationToken)">
            <summary>
            Gets list of available orders from Alpaca REST API endpoint.
            </summary>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
            <returns>Read-only list of order information objects.</returns>
        </member>
        <member name="T:Alpaca.Markets.OAuthKey">
            <summary>
            OAuth key for Alpaca/Polygon APIs authentication.
            </summary>
        </member>
        <member name="M:Alpaca.Markets.OAuthKey.#ctor(System.String)">
            <summary>
            Creates new instance of <see cref="T:Alpaca.Markets.OAuthKey"/> object.
            </summary>
            <param name="value">OAuth key.</param>
        </member>
        <member name="T:Alpaca.Markets.SecretKey">
            <summary>
            Secret API key for Alpaca/Polygon APIs authentication.
            </summary>
        </member>
        <member name="M:Alpaca.Markets.SecretKey.#ctor(System.String,System.String)">
            <summary>
            Creates new instance of <see cref="T:Alpaca.Markets.SecretKey"/> object.
            </summary>
            <param name="keyId">Secret API key identifier.</param>
            <param name="value">Secret API key value.</param>
        </member>
        <member name="T:Alpaca.Markets.SecurityKey">
            <summary>
            Base class for 'security key' abstraction.
            </summary>
        </member>
        <member name="M:Alpaca.Markets.SecurityKey.#ctor(System.String)">
            <summary>
            Creates new instance of <see cref="T:Alpaca.Markets.SecurityKey"/> object.
            </summary>
            <param name="value">Security key value.</param>
        </member>
        <member name="T:Alpaca.Markets.AccountActivityType">
            <summary>
            Types of account activities
            </summary>
        </member>
        <member name="F:Alpaca.Markets.AccountActivityType.Fill">
            <summary>
            Order fills (both partial and full fills)
            </summary>
        </member>
        <member name="F:Alpaca.Markets.AccountActivityType.Transaction">
            <summary>
            Cash transactions (both CSD and CSR)
            </summary>
        </member>
        <member name="F:Alpaca.Markets.AccountActivityType.Miscellaneous">
            <summary>
            Miscellaneous or rarely used activity types (All types except those in TRANS, DIV, or FILL)
            </summary>
        </member>
        <member name="F:Alpaca.Markets.AccountActivityType.ACATCash">
            <summary>
            ACATS IN/OUT (Cash)
            </summary>
        </member>
        <member name="F:Alpaca.Markets.AccountActivityType.ACATSecurities">
            <summary>
            ACATS IN/OUT (Securities)
            </summary>
        </member>
        <member name="F:Alpaca.Markets.AccountActivityType.CashDisbursement">
            <summary>
            Cash disbursement(+)
            </summary>
        </member>
        <member name="F:Alpaca.Markets.AccountActivityType.CashReceipt">
            <summary>
            Cash receipt(-)
            </summary>
        </member>
        <member name="F:Alpaca.Markets.AccountActivityType.Dividend">
            <summary>
            Dividends
            </summary>
        </member>
        <member name="F:Alpaca.Markets.AccountActivityType.DividendCapitalGainsLongTerm">
            <summary>
            Dividend (capital gains long term)
            </summary>
        </member>
        <member name="F:Alpaca.Markets.AccountActivityType.DividendCapitalGainsShortTerm">
            <summary>
            Dividend (capital gain short term)
            </summary>
        </member>
        <member name="F:Alpaca.Markets.AccountActivityType.DividendFee">
            <summary>
            Dividend fee
            </summary>
        </member>
        <member name="F:Alpaca.Markets.AccountActivityType.DividendForeignTaxWithheld">
            <summary>
            Dividend adjusted (Foreign Tax Withheld)
            </summary>
        </member>
        <member name="F:Alpaca.Markets.AccountActivityType.DividendNRAWithheld">
            <summary>
            Dividend adjusted (NRA Withheld)
            </summary>
        </member>
        <member name="F:Alpaca.Markets.AccountActivityType.DividendReturnOfCapital">
            <summary>
            Dividend return of capital
            </summary>
        </member>
        <member name="F:Alpaca.Markets.AccountActivityType.DividendTefraWithheld">
            <summary>
            Dividend adjusted (Tefra Withheld)
            </summary>
        </member>
        <member name="F:Alpaca.Markets.AccountActivityType.DividendTaxExempt">
            <summary>
            Dividend (tax exempt)
            </summary>
        </member>
        <member name="F:Alpaca.Markets.AccountActivityType.Interest">
            <summary>
            Interest (credit/margin)
            </summary>
        </member>
        <member name="F:Alpaca.Markets.AccountActivityType.InterestNRAWithheld">
            <summary>
            Interest adjusted (NRA Withheld)
            </summary>
        </member>
        <member name="F:Alpaca.Markets.AccountActivityType.InterestTefraWithheld">
            <summary>
            Interest adjusted (Tefra Withheld)
            </summary>
        </member>
        <member name="F:Alpaca.Markets.AccountActivityType.JournalEntry">
            <summary>
            Journal entry
            </summary>
        </member>
        <member name="F:Alpaca.Markets.AccountActivityType.JournalEntryCash">
            <summary>
            Journal entry (cash)
            </summary>
        </member>
        <member name="F:Alpaca.Markets.AccountActivityType.JournalEntryStock">
            <summary>
            Journal entry (stock)
            </summary>
        </member>
        <member name="F:Alpaca.Markets.AccountActivityType.MergerAcquisition">
            <summary>
            Merger/Acquisition
            </summary>
        </member>
        <member name="F:Alpaca.Markets.AccountActivityType.NameChange">
            <summary>
            Name change
            </summary>
        </member>
        <member name="F:Alpaca.Markets.AccountActivityType.PassThruCharge">
            <summary>
            Pass Thru Charge
            </summary>
        </member>
        <member name="F:Alpaca.Markets.AccountActivityType.PassThruRebate">
            <summary>
            Pass Thru Rebate
            </summary>
        </member>
        <member name="F:Alpaca.Markets.AccountActivityType.Reorg">
            <summary>
            Reorganization
            </summary>
        </member>
        <member name="F:Alpaca.Markets.AccountActivityType.SymbolChange">
            <summary>
            Symbol change
            </summary>
        </member>
        <member name="F:Alpaca.Markets.AccountActivityType.StockSpinoff">
            <summary>
            Stock spinoff
            </summary>
        </member>
        <member name="F:Alpaca.Markets.AccountActivityType.StockSplit">
            <summary>
            Stock split
            </summary>
        </member>
        <member name="T:Alpaca.Markets.AccountStatus">
            <summary>
            User account status in Alpaca REST API.
            </summary>
        </member>
        <member name="F:Alpaca.Markets.AccountStatus.Onboarding">
            <summary>
            Account opened but not verified.
            </summary>
        </member>
        <member name="F:Alpaca.Markets.AccountStatus.SubmissionFailed">
            <summary>
            Missed important information.
            </summary>
        </member>
        <member name="F:Alpaca.Markets.AccountStatus.Submitted">
            <summary>
            Additional information added.
            </summary>
        </member>
        <member name="F:Alpaca.Markets.AccountStatus.AccountUpdated">
            <summary>
            Accouunt data updated.
            </summary>
        </member>
        <member name="F:Alpaca.Markets.AccountStatus.ApprovalPending">
            <summary>
            Approval request sent.
            </summary>
        </member>
        <member name="F:Alpaca.Markets.AccountStatus.Active">
            <summary>
            Account approved and working.
            </summary>
        </member>
        <member name="F:Alpaca.Markets.AccountStatus.Rejected">
            <summary>
            Account approval rejected.
            </summary>
        </member>
        <member name="T:Alpaca.Markets.AggregationPeriodUnit">
            <summary>
            Supported aggregation time windows for Alpaca REST API.
            </summary>
        </member>
        <member name="F:Alpaca.Markets.AggregationPeriodUnit.Minute">
            <summary>
            One minute window
            </summary>
        </member>
        <member name="F:Alpaca.Markets.AggregationPeriodUnit.Hour">
            <summary>
            One hour window
            </summary>
        </member>
        <member name="F:Alpaca.Markets.AggregationPeriodUnit.Day">
            <summary>
            One day window
            </summary>
        </member>
        <member name="F:Alpaca.Markets.AggregationPeriodUnit.Week">
            <summary>
            One week window
            </summary>
        </member>
        <member name="F:Alpaca.Markets.AggregationPeriodUnit.Month">
            <summary>
            One month window
            </summary>
        </member>
        <member name="F:Alpaca.Markets.AggregationPeriodUnit.Quarter">
            <summary>
            One quarter window
            </summary>
        </member>
        <member name="F:Alpaca.Markets.AggregationPeriodUnit.Year">
            <summary>
            One year window
            </summary>
        </member>
        <member name="T:Alpaca.Markets.AggregationType">
            <summary>
            Historical data aggregation type in Alpaca REST API.
            </summary>
        </member>
        <member name="F:Alpaca.Markets.AggregationType.Day">
            <summary>
            Aggregated data for single trading day.
            </summary>
        </member>
        <member name="F:Alpaca.Markets.AggregationType.Minute">
            <summary>
            Aggregated data for single minute.
            </summary>
        </member>
        <member name="T:Alpaca.Markets.ApiVersion">
            <summary>
            REST API version number.
            </summary>
        </member>
        <member name="F:Alpaca.Markets.ApiVersion.V1">
            <summary>
            First version number.
            </summary>
        </member>
        <member name="F:Alpaca.Markets.ApiVersion.V2">
            <summary>
            Second version number.
            </summary>
        </member>
        <member name="T:Alpaca.Markets.AssetClass">
            <summary>
            Supported asset classes for Alpaca REST API.
            </summary>
        </member>
        <member name="F:Alpaca.Markets.AssetClass.UsEquity">
            <summary>
            US equity asset class.
            </summary>
        </member>
        <member name="T:Alpaca.Markets.AssetStatus">
            <summary>
            Single asset status in Alpaca REST API.
            </summary>
        </member>
        <member name="F:Alpaca.Markets.AssetStatus.Active">
            <summary>
            Active asset.
            </summary>
        </member>
        <member name="F:Alpaca.Markets.AssetStatus.Inactive">
            <summary>
            Inactive asset.
            </summary>
        </member>
        <member name="F:Alpaca.Markets.AssetStatus.Delisted">
            <summary>
            Delisted asset.
            </summary>
        </member>
        <member name="T:Alpaca.Markets.AuthStatus">
            <summary>
            Authorization status for Alpaca streaming API.
            </summary>
        </member>
        <member name="F:Alpaca.Markets.AuthStatus.Authorized">
            <summary>
            Client successfully authorized.
            </summary>
        </member>
        <member name="F:Alpaca.Markets.AuthStatus.Unauthorized">
            <summary>
            Client does not authorized.
            </summary>
        </member>
        <member name="T:Alpaca.Markets.ConnectionStatus">
            <summary>
            Authorization status for Alpaca streaming API.
            </summary>
        </member>
        <member name="F:Alpaca.Markets.ConnectionStatus.Connected">
            <summary>
            Client successfully connected.
            </summary>
        </member>
        <member name="F:Alpaca.Markets.ConnectionStatus.AuthenticationSuccess">
            <summary>
            Client successfully authorized.
            </summary>
        </member>
        <member name="F:Alpaca.Markets.ConnectionStatus.AuthenticationRequired">
            <summary>
            Client authentication required.
            </summary>
        </member>
        <member name="F:Alpaca.Markets.ConnectionStatus.AuthenticationFailed">
            <summary>
            Client authentication failed.
            </summary>
        </member>
        <member name="F:Alpaca.Markets.ConnectionStatus.Success">
            <summary>
            Requested operation successfully completed.
            </summary>
        </member>
        <member name="F:Alpaca.Markets.ConnectionStatus.Failed">
            <summary>
            Requested operation failed.
            </summary>
        </member>
        <member name="F:Alpaca.Markets.ConnectionStatus.AlpacaDataStreamingAuthorized">
            <summary>
            Client successfully authorized.
            </summary>
        </member>
        <member name="F:Alpaca.Markets.ConnectionStatus.AlpacaDataStreamingUnauthorized">
            <summary>
            Client authentication failed.
            </summary>
        </member>
        <member name="T:Alpaca.Markets.DayTradeMarginCallProtection">
            <summary>
            Day trade margin call protection mode for account. See more information here:
            https://docs.alpaca.markets/user-protections/#day-trade-margin-call-dtmc-protection-at-alpaca
            </summary>
        </member>
        <member name="F:Alpaca.Markets.DayTradeMarginCallProtection.Entry">
            <summary>
            Check rules on position entry.
            </summary>
        </member>
        <member name="F:Alpaca.Markets.DayTradeMarginCallProtection.Exit">
            <summary>
            Check rules on position exit.
            </summary>
        </member>
        <member name="F:Alpaca.Markets.DayTradeMarginCallProtection.Both">
            <summary>
            Check rules on position entry and exit.
            </summary>
        </member>
        <member name="T:Alpaca.Markets.Exchange">
            <summary>
            Exchanges supported by Alpaca REST API.
            </summary>
        </member>
        <member name="F:Alpaca.Markets.Exchange.Unknown">
            <summary>
            Unknown exchange (not supported by this version of SDK).
            </summary>
        </member>
        <member name="F:Alpaca.Markets.Exchange.NyseMkt">
            <summary>
            NYSE American Stock Exchange.
            </summary>
        </member>
        <member name="F:Alpaca.Markets.Exchange.NyseArca">
            <summary>
            NYSE Arca Stock Exchange.
            </summary>
        </member>
        <member name="F:Alpaca.Markets.Exchange.Nyse">
            <summary>
            New York Stock Exchange (NYSE)
            </summary>
        </member>
        <member name="F:Alpaca.Markets.Exchange.Nasdaq">
            <summary>
            Nasdaq Stock Market.
            </summary>
        </member>
        <member name="F:Alpaca.Markets.Exchange.Bats">
            <summary>
            BATS Global Market.
            </summary>
        </member>
        <member name="F:Alpaca.Markets.Exchange.Amex">
            <summary>
            American Stock Exchange (AMEX)
            </summary>
        </member>
        <member name="F:Alpaca.Markets.Exchange.Arca">
            <summary>
            Archipelago Stock Exchange (ARCA).
            </summary>
        </member>
        <member name="F:Alpaca.Markets.Exchange.Iex">
            <summary>
            International Exchange (IEX).
            </summary>
        </member>
        <member name="T:Alpaca.Markets.ExchangeType">
            <summary>
            Supported exchange types in Polygon REST API.
            </summary>
        </member>
        <member name="F:Alpaca.Markets.ExchangeType.Exchange">
            <summary>
            Ordinal exchange.
            </summary>
        </member>
        <member name="F:Alpaca.Markets.ExchangeType.Banking">
            <summary>
            Banking organization.
            </summary>
        </member>
        <member name="F:Alpaca.Markets.ExchangeType.TradeReportingFacility">
            <summary>
            Trade reporting facility.
            </summary>
        </member>
        <member name="T:Alpaca.Markets.HistoryPeriodUnit">
            <summary>
            Period units for portfolio history in the Alpaca REST API.
            </summary>
        </member>
        <member name="F:Alpaca.Markets.HistoryPeriodUnit.Day">
            <summary>
            Day
            </summary>
        </member>
        <member name="F:Alpaca.Markets.HistoryPeriodUnit.Week">
            <summary>
            Month
            </summary>
        </member>
        <member name="F:Alpaca.Markets.HistoryPeriodUnit.Month">
            <summary>
            Month
            </summary>
        </member>
        <member name="F:Alpaca.Markets.HistoryPeriodUnit.Year">
            <summary>
            3 month
            </summary>
        </member>
        <member name="T:Alpaca.Markets.MarketDataType">
            <summary>
            Supported asset types in Polygon REST API.
            </summary>
        </member>
        <member name="F:Alpaca.Markets.MarketDataType.Equities">
            <summary>
            Equities.
            </summary>
        </member>
        <member name="F:Alpaca.Markets.MarketDataType.Indexes">
            <summary>
            Indexes.
            </summary>
        </member>
        <member name="F:Alpaca.Markets.MarketDataType.Currencies">
            <summary>
            Currencies.
            </summary>
        </member>
        <member name="T:Alpaca.Markets.OrderClass">
            <summary>
            Order class for advanced orders in the Alpaca REST API.
            </summary>
        </member>
        <member name="F:Alpaca.Markets.OrderClass.Bracket">
            <summary>
            Bracket order
            </summary>
        </member>
        <member name="F:Alpaca.Markets.OrderClass.OneCancelsOther">
            <summary>
            One Cancels Other order
            </summary>
        </member>
        <member name="F:Alpaca.Markets.OrderClass.OneTriggersOther">
            <summary>
            One Triggers Other order
            </summary>
        </member>
        <member name="T:Alpaca.Markets.OrderSide">
            <summary>
            Order side in Alpaca REST API.
            </summary>
        </member>
        <member name="F:Alpaca.Markets.OrderSide.Buy">
            <summary>
            Buy order.
            </summary>
        </member>
        <member name="F:Alpaca.Markets.OrderSide.Sell">
            <summary>
            Sell order.
            </summary>
        </member>
        <member name="T:Alpaca.Markets.OrderStatus">
            <summary>
            Order status in Alpaca REST API.
            </summary>
        </member>
        <member name="F:Alpaca.Markets.OrderStatus.Accepted">
            <summary>
            Order accepted by server.
            </summary>
        </member>
        <member name="F:Alpaca.Markets.OrderStatus.New">
            <summary>
            New working order.
            </summary>
        </member>
        <member name="F:Alpaca.Markets.OrderStatus.PartialFill">
            <summary>
            Partial fill (event) on order.
            </summary>
        </member>
        <member name="F:Alpaca.Markets.OrderStatus.PartiallyFilled">
            <summary>
            Order partially filled (status).
            </summary>
        </member>
        <member name="F:Alpaca.Markets.OrderStatus.Filled">
            <summary>
            Order completely filled.
            </summary>
        </member>
        <member name="F:Alpaca.Markets.OrderStatus.DoneForDay">
            <summary>
            Order processing done.
            </summary>
        </member>
        <member name="F:Alpaca.Markets.OrderStatus.Canceled">
            <summary>
            Order cancelled.
            </summary>
        </member>
        <member name="F:Alpaca.Markets.OrderStatus.Replaced">
            <summary>
            Order replaced (modified).
            </summary>
        </member>
        <member name="F:Alpaca.Markets.OrderStatus.PendingCancel">
            <summary>
            Order cancellation request pending.
            </summary>
        </member>
        <member name="F:Alpaca.Markets.OrderStatus.Stopped">
            <summary>
            Order processing stopped by server.
            </summary>
        </member>
        <member name="F:Alpaca.Markets.OrderStatus.Rejected">
            <summary>
            Order rejected by server side.
            </summary>
        </member>
        <member name="F:Alpaca.Markets.OrderStatus.Suspended">
            <summary>
            Order processing suspended by server.
            </summary>
        </member>
        <member name="F:Alpaca.Markets.OrderStatus.PendingNew">
            <summary>
            Initial new order request pending.
            </summary>
        </member>
        <member name="F:Alpaca.Markets.OrderStatus.Calculated">
            <summary>
            Order information calculated by server.
            </summary>
        </member>
        <member name="F:Alpaca.Markets.OrderStatus.Expired">
            <summary>
            Order expired.
            </summary>
        </member>
        <member name="F:Alpaca.Markets.OrderStatus.AcceptedForBidding">
            <summary>
            Order accepted for bidding by server.
            </summary>
        </member>
        <member name="F:Alpaca.Markets.OrderStatus.PendingReplace">
            <summary>
            Order replacement request pending.
            </summary>
        </member>
        <member name="F:Alpaca.Markets.OrderStatus.Fill">
            <summary>
            Order completely filled.
            </summary>
        </member>
        <member name="F:Alpaca.Markets.OrderStatus.Held">
            <summary>
            Order held pending trigger event.
            </summary>
        </member>
        <member name="T:Alpaca.Markets.OrderStatusFilter">
            <summary>
            Order statuses filter for <see cref="M:Alpaca.Markets.AlpacaTradingClient.ListOrdersAsync(Alpaca.Markets.ListOrdersRequest,System.Threading.CancellationToken)"/> call from Alpaca REST API.
            </summary>
        </member>
        <member name="F:Alpaca.Markets.OrderStatusFilter.Open">
            <summary>
            Returns only open orders.
            </summary>
        </member>
        <member name="F:Alpaca.Markets.OrderStatusFilter.Closed">
            <summary>
            Returns only closed orders.
            </summary>
        </member>
        <member name="F:Alpaca.Markets.OrderStatusFilter.All">
            <summary>
            Returns all orders.
            </summary>
        </member>
        <member name="T:Alpaca.Markets.OrderType">
            <summary>
            Supported order types in Alpaca REST API.
            </summary>
        </member>
        <member name="F:Alpaca.Markets.OrderType.Market">
            <summary>
            Market order (no prices required).
            </summary>
        </member>
        <member name="F:Alpaca.Markets.OrderType.Stop">
            <summary>
            Stop order (stop price required).
            </summary>
        </member>
        <member name="F:Alpaca.Markets.OrderType.Limit">
            <summary>
            Limit order (limit price required).
            </summary>
        </member>
        <member name="F:Alpaca.Markets.OrderType.StopLimit">
            <summary>
            Stop limit order (both stop and limit prices required).
            </summary>
        </member>
        <member name="F:Alpaca.Markets.OrderType.TrailingStop">
            <summary>
            Trailing stop order (dollars or percent offset required).
            </summary>
        </member>
        <member name="T:Alpaca.Markets.PositionSide">
            <summary>
            Position side in Alpaca REST API.
            </summary>
        </member>
        <member name="F:Alpaca.Markets.PositionSide.Long">
            <summary>
            Long position.
            </summary>
        </member>
        <member name="F:Alpaca.Markets.PositionSide.Short">
            <summary>
            Short position.
            </summary>
        </member>
        <member name="T:Alpaca.Markets.SortDirection">
            <summary>
            Supported sort directions in Alpaca REST API.
            </summary>
        </member>
        <member name="F:Alpaca.Markets.SortDirection.Descending">
            <summary>
            Descending sort order
            </summary>
        </member>
        <member name="F:Alpaca.Markets.SortDirection.Ascending">
            <summary>
            Ascending sort order
            </summary>
        </member>
        <member name="T:Alpaca.Markets.TickType">
            <summary>
            Conditions map type for <see cref="M:Alpaca.Markets.PolygonDataClient.GetConditionMapAsync(Alpaca.Markets.TickType,System.Threading.CancellationToken)"/> call form Polygon REST API.
            </summary>
        </member>
        <member name="F:Alpaca.Markets.TickType.Trades">
            <summary>
            Method <see cref="M:Alpaca.Markets.PolygonDataClient.GetConditionMapAsync(Alpaca.Markets.TickType,System.Threading.CancellationToken)"/> returns trades conditions.
            </summary>
        </member>
        <member name="F:Alpaca.Markets.TickType.Quotes">
            <summary>
            Method <see cref="M:Alpaca.Markets.PolygonDataClient.GetConditionMapAsync(Alpaca.Markets.TickType,System.Threading.CancellationToken)"/> returns quotes conditions.
            </summary>
        </member>
        <member name="T:Alpaca.Markets.TimeFrame">
            <summary>
            Supported bar duration for Alpaca REST API.
            </summary>
        </member>
        <member name="F:Alpaca.Markets.TimeFrame.Minute">
            <summary>
            One minute bars.
            </summary>
        </member>
        <member name="F:Alpaca.Markets.TimeFrame.FiveMinutes">
            <summary>
            Five minutes bars.
            </summary>
        </member>
        <member name="F:Alpaca.Markets.TimeFrame.FifteenMinutes">
            <summary>
            Fifteen minutes bars.
            </summary>
        </member>
        <member name="F:Alpaca.Markets.TimeFrame.Hour">
            <summary>
            Hour bars.
            </summary>
        </member>
        <member name="F:Alpaca.Markets.TimeFrame.Day">
            <summary>
            Daily bars.
            </summary>
        </member>
        <member name="T:Alpaca.Markets.TimeInForce">
            <summary>
            Supported order durations in Alpaca REST API.
            </summary>
        </member>
        <member name="F:Alpaca.Markets.TimeInForce.Day">
            <summary>
            The order is good for the day, and it will be canceled automatically at the end of market hours.
            </summary>
        </member>
        <member name="F:Alpaca.Markets.TimeInForce.Gtc">
            <summary>
            The order is good until canceled.
            </summary>
        </member>
        <member name="F:Alpaca.Markets.TimeInForce.Opg">
            <summary>
            The order is placed at the time the market opens.
            </summary>
        </member>
        <member name="F:Alpaca.Markets.TimeInForce.Ioc">
            <summary>
            The order is immediately filled or canceled after being placed (may partial fill).
            </summary>
        </member>
        <member name="F:Alpaca.Markets.TimeInForce.Fok">
            <summary>
            The order is immediately filled or canceled after being placed (may not partial fill).
            </summary>
        </member>
        <member name="F:Alpaca.Markets.TimeInForce.Cls">
            <summary>
            The order will become a limit order if a limit price is specified or a market order otherwise at market close.
            </summary>
        </member>
        <member name="T:Alpaca.Markets.TradeConfirmEmail">
            <summary>
            Notification level for order fill emails.
            </summary>
        </member>
        <member name="F:Alpaca.Markets.TradeConfirmEmail.None">
            <summary>
            Never send email notification for order fills.
            </summary>
        </member>
        <member name="F:Alpaca.Markets.TradeConfirmEmail.All">
            <summary>
            Send email notification for all order fills.
            </summary>
        </member>
        <member name="T:Alpaca.Markets.TradeEvent">
            <summary>
            Trade event in Alpaca trade update stream
            </summary>
        </member>
        <member name="F:Alpaca.Markets.TradeEvent.New">
            <summary>
            New working order.
            </summary>
        </member>
        <member name="F:Alpaca.Markets.TradeEvent.PartialFill">
            <summary>
            Order partially filled.
            </summary>
        </member>
        <member name="F:Alpaca.Markets.TradeEvent.Fill">
            <summary>
            Order completely filled.
            </summary>
        </member>
        <member name="F:Alpaca.Markets.TradeEvent.DoneForDay">
            <summary>
            Order processing done.
            </summary>
        </member>
        <member name="F:Alpaca.Markets.TradeEvent.Canceled">
            <summary>
            Order cancelled.
            </summary>
        </member>
        <member name="F:Alpaca.Markets.TradeEvent.PendingCancel">
            <summary>
            Order cancellation request pending.
            </summary>
        </member>
        <member name="F:Alpaca.Markets.TradeEvent.Stopped">
            <summary>
            Order processing stopped by server.
            </summary>
        </member>
        <member name="F:Alpaca.Markets.TradeEvent.Rejected">
            <summary>
            Order rejected by server side.
            </summary>
        </member>
        <member name="F:Alpaca.Markets.TradeEvent.Suspended">
            <summary>
            Order processing suspended by server.
            </summary>
        </member>
        <member name="F:Alpaca.Markets.TradeEvent.PendingNew">
            <summary>
            Initial new order request pending.
            </summary>
        </member>
        <member name="F:Alpaca.Markets.TradeEvent.Calculated">
            <summary>
            Order information calculated by server.
            </summary>
        </member>
        <member name="F:Alpaca.Markets.TradeEvent.Expired">
            <summary>
            Order expired.
            </summary>
        </member>
        <member name="F:Alpaca.Markets.TradeEvent.OrderCancelRejected">
            <summary>
            Order cancellation was rejected.
            </summary>
        </member>
        <member name="F:Alpaca.Markets.TradeEvent.Replaced">
            <summary>
            Requested replacement of an order was processed.
            </summary>
        </member>
        <member name="F:Alpaca.Markets.TradeEvent.PendingReplace">
            <summary>
            The order is awaiting replacement.
            </summary>
        </member>
        <member name="F:Alpaca.Markets.TradeEvent.ReplaceRejected">
            <summary>
            The order replace has been rejected.
            </summary>
        </member>
        <member name="T:Alpaca.Markets.EnvironmentExtensions">
            <summary>
            Collection of helper extension methods for <see cref="T:Alpaca.Markets.IEnvironment"/> interface.
            </summary>
        </member>
        <member name="M:Alpaca.Markets.EnvironmentExtensions.GetAlpacaTradingClient(Alpaca.Markets.IEnvironment,Alpaca.Markets.SecurityKey)">
            <summary>
            Creates the new instance of <see cref="T:Alpaca.Markets.IAlpacaTradingClient"/> interface
            implementation for specific environment provided as <paramref name="environment"/> argument.
            </summary>
            <param name="environment">Target environment for new object.</param>
            <param name="securityKey">Alpaca API security key.</param>
            <returns>The new instance of <see cref="T:Alpaca.Markets.IAlpacaTradingClient"/> interface implementation.</returns>
        </member>
        <member name="M:Alpaca.Markets.EnvironmentExtensions.GetAlpacaTradingClientConfiguration(Alpaca.Markets.IEnvironment,Alpaca.Markets.SecurityKey)">
            <summary>
            Creates new instance of <see cref="T:Alpaca.Markets.AlpacaTradingClientConfiguration"/> for specific
            environment provided as <paramref name="environment"/> argument.
            </summary>
            <param name="environment">Target environment for new object.</param>
            <param name="securityKey">Alpaca API security key.</param>
            <returns>New instance of <see cref="T:Alpaca.Markets.AlpacaTradingClientConfiguration"/> object.</returns>
        </member>
        <member name="M:Alpaca.Markets.EnvironmentExtensions.GetAlpacaDataClient(Alpaca.Markets.IEnvironment,Alpaca.Markets.SecurityKey)">
            <summary>
            Creates the new instance of <see cref="T:Alpaca.Markets.IAlpacaDataClient"/> interface
            implementation for specific environment provided as <paramref name="environment"/> argument.
            </summary>
            <param name="environment">Target environment for new object.</param>
            <param name="securityKey">Alpaca API security key.</param>
            <returns>The new instance of <see cref="T:Alpaca.Markets.IAlpacaDataClient"/> interface implementation.</returns>
        </member>
        <member name="M:Alpaca.Markets.EnvironmentExtensions.GetAlpacaDataClientConfiguration(Alpaca.Markets.IEnvironment,Alpaca.Markets.SecurityKey)">
            <summary>
            Creates new instance of <see cref="T:Alpaca.Markets.AlpacaDataClientConfiguration"/> for specific
            environment provided as <paramref name="environment"/> argument.
            </summary>
            <param name="environment">Target environment for new object.</param>
            <param name="securityKey">Alpaca API security key.</param>
            <returns>New instance of <see cref="T:Alpaca.Markets.AlpacaDataClientConfiguration"/> object.</returns>
        </member>
        <member name="M:Alpaca.Markets.EnvironmentExtensions.GetPolygonDataClient(Alpaca.Markets.IEnvironment,System.String)">
            <summary>
            Creates the new instance of <see cref="T:Alpaca.Markets.IPolygonDataClient"/> interface
            implementation for specific environment provided as <paramref name="environment"/> argument.
            </summary>
            <param name="environment">Target environment for new object.</param>
            <param name="keyId">Alpaca API key identifier.</param>
            <returns>The new instance of <see cref="T:Alpaca.Markets.IPolygonDataClient"/> interface implementation.</returns>
        </member>
        <member name="M:Alpaca.Markets.EnvironmentExtensions.GetPolygonDataClientConfiguration(Alpaca.Markets.IEnvironment,System.String)">
            <summary>
            Creates new instance of <see cref="T:Alpaca.Markets.PolygonDataClientConfiguration"/> for specific
            environment provided as <paramref name="environment"/> argument.
            </summary>
            <param name="environment">Target environment for new object.</param>
            <param name="keyId">Alpaca API key identifier.</param>
            <returns>New instance of <see cref="T:Alpaca.Markets.PolygonDataClientConfiguration"/> object.</returns>
        </member>
        <member name="M:Alpaca.Markets.EnvironmentExtensions.GetAlpacaStreamingClient(Alpaca.Markets.IEnvironment,Alpaca.Markets.SecurityKey)">
            <summary>
            Creates the new instance of <see cref="T:Alpaca.Markets.IAlpacaStreamingClient"/> interface
            implementation for specific environment provided as <paramref name="environment"/> argument.
            </summary>
            <param name="environment">Target environment for new object.</param>
            <param name="securityKey">Alpaca API security key.</param>
            <returns>The new instance of <see cref="T:Alpaca.Markets.IAlpacaStreamingClient"/> interface implementation.</returns>
        </member>
        <member name="M:Alpaca.Markets.EnvironmentExtensions.GetAlpacaStreamingClientConfiguration(Alpaca.Markets.IEnvironment,Alpaca.Markets.SecurityKey)">
            <summary>
            Creates new instance of <see cref="T:Alpaca.Markets.AlpacaStreamingClientConfiguration"/> for specific
            environment provided as <paramref name="environment"/> argument.
            </summary>
            <param name="environment">Target environment for new object.</param>
            <param name="securityKey">Alpaca API security key.</param>
            <returns>New instance of <see cref="T:Alpaca.Markets.AlpacaStreamingClientConfiguration"/> object.</returns>
        </member>
        <member name="M:Alpaca.Markets.EnvironmentExtensions.GetPolygonStreamingClient(Alpaca.Markets.IEnvironment,System.String)">
            <summary>
            Creates the new instance of <see cref="T:Alpaca.Markets.IPolygonStreamingClient"/> interface
            implementation for specific environment provided as <paramref name="environment"/> argument.
            </summary>
            <param name="environment">Target environment for new object.</param>
            <param name="keyId">Alpaca API key identifier.</param>
            <returns>The new instance of <see cref="T:Alpaca.Markets.IPolygonStreamingClient"/> interface implementation.</returns>
        </member>
        <member name="M:Alpaca.Markets.EnvironmentExtensions.GetPolygonStreamingClientConfiguration(Alpaca.Markets.IEnvironment,System.String)">
            <summary>
            Creates new instance of <see cref="T:Alpaca.Markets.PolygonStreamingClientConfiguration"/> for specific
            environment provided as <paramref name="environment"/> argument.
            </summary>
            <param name="environment">Target environment for new object.</param>
            <param name="keyId">Alpaca API key identifier.</param>
            <returns>New instance of <see cref="T:Alpaca.Markets.PolygonStreamingClientConfiguration"/> object.</returns>
        </member>
        <member name="M:Alpaca.Markets.EnvironmentExtensions.GetAlpacaDataStreamingClient(Alpaca.Markets.IEnvironment,Alpaca.Markets.SecurityKey)">
            <summary>
            Creates the new instance of <see cref="T:Alpaca.Markets.IAlpacaDataStreamingClient"/> interface
            implementation for specific environment provided as <paramref name="environment"/> argument.
            </summary>
            <param name="environment">Target environment for new object.</param>
            <param name="securityKey">Alpaca API security key.</param>
            <returns>The new instance of <see cref="T:Alpaca.Markets.IAlpacaDataStreamingClient"/> interface implementation.</returns>
        </member>
        <member name="M:Alpaca.Markets.EnvironmentExtensions.GetAlpacaDataStreamingClientConfiguration(Alpaca.Markets.IEnvironment,Alpaca.Markets.SecurityKey)">
            <summary>
            Creates new instance of <see cref="T:Alpaca.Markets.AlpacaDataStreamingClientConfiguration"/> for specific
            environment provided as <paramref name="environment"/> argument.
            </summary>
            <param name="environment">Target environment for new object.</param>
            <param name="securityKey">Alpaca API security key.</param>
            <returns>New instance of <see cref="T:Alpaca.Markets.AlpacaDataStreamingClientConfiguration"/> object.</returns>
        </member>
        <member name="T:Alpaca.Markets.Environments">
            <summary>
            Provides single entry point for obtaining information about different environments.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.Environments.Live">
            <summary>
            Gets environment used by all Alpaca users who has fully registered accounts.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.Environments.Paper">
            <summary>
            Gets environment used by all Alpaca users who have no registered accounts.
            </summary>
        </member>
        <member name="T:Alpaca.Markets.IEnvironment">
            <summary>
            Provides URLs for different APIs available for this SDK on specific environment.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.IEnvironment.AlpacaTradingApi">
            <summary>
            Gets Alpaca trading REST API base URL for this environment.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.IEnvironment.AlpacaDataApi">
            <summary>
            Gets Alpaca data REST API base URL for this environment.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.IEnvironment.PolygonDataApi">
            <summary>
            Gets Polygon.io data REST API base URL for this environment.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.IEnvironment.AlpacaStreamingApi">
            <summary>
            Gets Alpaca streaming API base URL for this environment.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.IEnvironment.PolygonStreamingApi">
            <summary>
            Gets Polygon.io streaming API base URL for this environment.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.IEnvironment.AlpacaDataStreamingApi">
            <summary>
            Gets Alpaca data streaming API base URL for this environment.
            </summary>
        </member>
        <member name="T:Alpaca.Markets.RequestValidationException">
            <summary>
            Represents exception information for request input data validation errors.
            </summary>
        </member>
        <member name="M:Alpaca.Markets.RequestValidationException.#ctor">
            <summary>
            Creates new instance of <see cref="T:Alpaca.Markets.RequestValidationException"/> class.
            </summary>
        </member>
        <member name="M:Alpaca.Markets.RequestValidationException.#ctor(System.String)">
            <summary>
            Creates new instance of <see cref="T:Alpaca.Markets.RequestValidationException"/> class with specified error message.
            </summary>
            <param name="message">The message that describes the error.</param>
        </member>
        <member name="M:Alpaca.Markets.RequestValidationException.#ctor(System.String,System.Exception)">
            <summary>
            Creates new instance of <see cref="T:Alpaca.Markets.RequestValidationException"/> class with
            specified error message and reference to the inner exception that is the cause of this exception.
            </summary>
            <param name="message">The message that describes the error.</param>
            <param name="inner">The  exception that is the cause of this exception.</param>
        </member>
        <member name="M:Alpaca.Markets.RequestValidationException.#ctor(System.String,System.String)">
            <summary>
            Creates new instance of <see cref="T:Alpaca.Markets.RequestValidationException"/> class with specified error message.
            </summary>
            <param name="message">The message that describes the error.</param>
            <param name="propertyName">The invalid property name.</param>
        </member>
        <member name="P:Alpaca.Markets.RequestValidationException.PropertyName">
            <summary>
            GEts the invalid property name that causes this validation exception.
            </summary>
        </member>
        <member name="T:Alpaca.Markets.RestClientErrorException">
            <summary>
            Represents Alpaca/Polygon REST API specific error information.
            </summary>
        </member>
        <member name="M:Alpaca.Markets.RestClientErrorException.#ctor">
            <summary>
            Creates new instance of <see cref="T:Alpaca.Markets.RestClientErrorException"/> class.
            </summary>
        </member>
        <member name="M:Alpaca.Markets.RestClientErrorException.#ctor(System.String)">
            <summary>
            Creates new instance of <see cref="T:Alpaca.Markets.RestClientErrorException"/> class with specified error message.
            </summary>
            <param name="message">The message that describes the error.</param>
        </member>
        <member name="M:Alpaca.Markets.RestClientErrorException.#ctor(System.String,System.Exception)">
            <summary>
            Creates new instance of <see cref="T:Alpaca.Markets.RestClientErrorException"/> class with
            specified error message and reference to the inner exception that is the cause of this exception.
            </summary>
            <param name="message">The message that describes the error.</param>
            <param name="inner">The  exception that is the cause of this exception.</param>
        </member>
        <member name="P:Alpaca.Markets.RestClientErrorException.ErrorCode">
            <summary>
            Original error code returned by REST API endpoint.
            </summary>
        </member>
        <member name="M:Alpaca.Markets.Validation.IRequest.GetExceptions">
            <summary>
            Gets all validation exceptions (inconsistent request data errors).
            </summary>
            <returns>Lazy-evaluated list of validation errors.</returns>
        </member>
        <member name="T:Alpaca.Markets.IAccount">
            <summary>
            Encapsulates full account information from Alpaca REST API.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.IAccount.AccountNumber">
            <summary>
            Gets account number (string identifier).
            </summary>
        </member>
        <member name="P:Alpaca.Markets.IAccount.IsDayPatternTrader">
            <summary>
            Gets returns <c>true</c> if account is linked to day pattern trader.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.IAccount.IsTradingBlocked">
            <summary>
            Gets returns <c>true</c> if account trading functions are blocked.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.IAccount.IsTransfersBlocked">
            <summary>
            Gets returns <c>true</c> if account transfer functions are blocked.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.IAccount.TradeSuspendedByUser">
            <summary>
            User setting. If <c>true</c>, the account is not allowed to place orders.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.IAccount.ShortingEnabled">
            <summary>
            Flag to denote whether or not the account is permitted to short.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.IAccount.Multiplier">
            <summary>
            Buying power multiplier that represents account margin classification.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.IAccount.BuyingPower">
            <summary>
            Current available buying power.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.IAccount.DayTradingBuyingPower">
            <summary>
            Your buying power for day trades (continuously updated value).
            </summary>
        </member>
        <member name="P:Alpaca.Markets.IAccount.RegulationBuyingPower">
            <summary>
            Your buying power under Regulation T (your excess equity - equity minus margin value - times your margin multiplier).
            </summary>
        </member>
        <member name="P:Alpaca.Markets.IAccount.LongMarketValue">
            <summary>
            Real-time MtM value of all long positions held in the account.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.IAccount.ShortMarketValue">
            <summary>
            Real-time MtM value of all short positions held in the account.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.IAccount.Equity">
            <summary>
            Cash + LongMarketValue + ShortMarketValue.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.IAccount.LastEquity">
            <summary>
            Equity as of previous trading day at 16:00:00 ET.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.IAccount.InitialMargin">
            <summary>
            Reg T initial margin requirement (continuously updated value).
            </summary>
        </member>
        <member name="P:Alpaca.Markets.IAccount.MaintenanceMargin">
            <summary>
            Maintenance margin requirement (continuously updated value).
            </summary>
        </member>
        <member name="P:Alpaca.Markets.IAccount.LastMaintenanceMargin">
            <summary>
            Your maintenance margin requirement on the previous trading day
            </summary>
        </member>
        <member name="P:Alpaca.Markets.IAccount.DayTradeCount">
            <summary>
            the current number of day trades that have been made in the last 5 trading days (inclusive of today).
            </summary>
        </member>
        <member name="P:Alpaca.Markets.IAccount.Sma">
            <summary>
            value of special memorandum account.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.IAccount.IsAccountBlocked">
            <summary>
            Gets returns <c>true</c> if account is completely blocked.
            </summary>
        </member>
        <member name="T:Alpaca.Markets.IAccountActivity">
            <summary>
            Encapsulates account activity information from Alpaca REST API.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.IAccountActivity.ActivityType">
            <summary>
            Activity type.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.IAccountActivity.ActivityId">
            <summary>
            An ID for the activity, always in "{date}::{uuid}" format. Can be sent as page_token in requests to facilitate the paging of results.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.IAccountActivity.ActivityDateTime">
            <summary>
            An activity timestamp (date and time) from <see cref="P:Alpaca.Markets.IAccountActivity.ActivityId"/>.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.IAccountActivity.ActivityDateTimeUtc">
            <summary>
            An activity timestamp (date and time) from <see cref="P:Alpaca.Markets.IAccountActivity.ActivityId"/> in the UTC.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.IAccountActivity.ActivityGuid">
            <summary>
            An activity unique identifier from <see cref="P:Alpaca.Markets.IAccountActivity.ActivityId"/>.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.IAccountActivity.Symbol">
            <summary>
            The symbol of the security involved with the activity. Not present for all activity types.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.IAccountActivity.ActivityDate">
            <summary>
            The date on which the activity occurred or on which the transaction associated with the activity settled in the UTC.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.IAccountActivity.NetAmount">
            <summary>
            The net amount of money (positive or negative) associated with the activity.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.IAccountActivity.Quantity">
            <summary>
            The number of shares that contributed to the transaction. Not present for all activity types.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.IAccountActivity.PerShareAmount">
            <summary>
            For dividend activities, the average amount paid per share. Not present for other activity types.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.IAccountActivity.CumulativeQuantity">
            <summary>
            The cumulative quantity of shares involved in the execution.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.IAccountActivity.LeavesQuantity">
            <summary>
            For partially_filled orders, the quantity of shares that are left to be filled.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.IAccountActivity.Price">
            <summary>
            The per-share price that a trade was executed at.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.IAccountActivity.Side">
            <summary>
            The order side of a trade execution.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.IAccountActivity.TransactionTime">
            <summary>
            The time at which an execution occurred.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.IAccountActivity.TransactionTimeUtc">
            <summary>
            The time at which an execution occurred in the UTC.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.IAccountActivity.Type">
            <summary>
            The type of trade event associated with an execution.
            </summary>
        </member>
        <member name="T:Alpaca.Markets.IAccountBase">
            <summary>
            Encapsulates basic account information from Alpaca streaming API.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.IAccountBase.AccountId">
            <summary>
            Gets unique account identifier.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.IAccountBase.Status">
            <summary>
            Gets updated account status.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.IAccountBase.Currency">
            <summary>
            Gets main account currency.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.IAccountBase.TradableCash">
            <summary>
            Gets amount of money available for trading.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.IAccountBase.WithdrawableCash">
            <summary>
            Gets amount of money available for withdraw.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.IAccountBase.CreatedAt">
            <summary>
            Gets timestamp of account creation event.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.IAccountBase.CreatedAtUtc">
            <summary>
            Gets timestamp of account creation event in UTC.
            </summary>
        </member>
        <member name="T:Alpaca.Markets.IAccountConfiguration">
            <summary>
            Encapsulates account configuration settings from Alpaca REST API.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.IAccountConfiguration.DayTradeMarginCallProtection">
            <summary>
            Gets or sets day trade margin call protection mode for account.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.IAccountConfiguration.TradeConfirmEmail">
            <summary>
            Gets or sets notification level for order fill emails.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.IAccountConfiguration.IsSuspendTrade">
            <summary>
            Gets or sets control flag for blocking new orders placement.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.IAccountConfiguration.IsNoShorting">
            <summary>
            Gets or sets control flag for enabling long-only account mode.
            </summary>
        </member>
        <member name="T:Alpaca.Markets.IAccountUpdate">
            <summary>
            Encapsulates account update information from Alpaca streaming API.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.IAccountUpdate.UpdatedAt">
            <summary>
            Gets timestamp of last account update event.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.IAccountUpdate.UpdatedAtUtc">
            <summary>
            Gets timestamp of last account update event in the UTC.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.IAccountUpdate.DeletedAt">
            <summary>
            Gets timestamp of account deletion event.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.IAccountUpdate.DeletedAtUtc">
            <summary>
            Gets timestamp of account deletion event in the UTC.
            </summary>
        </member>
        <member name="T:Alpaca.Markets.IAgg">
            <summary>
            Encapsulates bar information from Polygon REST API.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.IAgg.Time">
            <summary>
            Gets bar timestamp.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.IAgg.TimeUtc">
            <summary>
            Gets bar timestamp in the UTC.
            </summary>
        </member>
        <member name="T:Alpaca.Markets.IAggBase">
            <summary>
            Encapsulates basic bar information for Polygon APIs.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.IAggBase.Open">
            <summary>
            Gets bar open price.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.IAggBase.High">
            <summary>
            Gets bar high price.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.IAggBase.Low">
            <summary>
            Gets bar low price.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.IAggBase.Close">
            <summary>
            Gets bar close price.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.IAggBase.Volume">
            <summary>
            Gets bar trading volume.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.IAggBase.ItemsInWindow">
            <summary>
            Number of items in aggregate window.
            Polygon v2 API only.
            </summary>
        </member>
        <member name="T:Alpaca.Markets.IAlpacaDataClient">
            <summary>
            Provides unified type-safe access for Alpaca Data API via HTTP/REST.
            </summary>
        </member>
        <member name="M:Alpaca.Markets.IAlpacaDataClient.GetBarSetAsync(Alpaca.Markets.BarSetRequest,System.Threading.CancellationToken)">
            <summary>
            Gets lookup table of historical daily bars lists for all assets from Alpaca REST API endpoint.
            </summary>
            <param name="request">Historical daily bars request parameters.</param>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
            <returns>Read-only list of daily bars for specified asset.</returns>
        </member>
        <member name="M:Alpaca.Markets.IAlpacaDataClient.GetLastTradeAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Gets last trade for singe asset from Alpaca REST API endpoint.
            </summary>
            <param name="symbol">Asset name for data retrieval.</param>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
            <returns>Read-only last trade information.</returns>
        </member>
        <member name="M:Alpaca.Markets.IAlpacaDataClient.GetLastQuoteAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Gets current quote for singe asset from Alpaca REST API endpoint.
            </summary>
            <param name="symbol">Asset name for data retrieval.</param>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
            <returns>Read-only current quote information.</returns>
        </member>
        <member name="T:Alpaca.Markets.IAlpacaDataStreamingClient">
            <summary>
            Provides unified type-safe access for Alpaca data streaming API via websockets.
            </summary>
        </member>
        <member name="M:Alpaca.Markets.IAlpacaDataStreamingClient.GetTradeSubscription(System.String)">
            <summary>
            Gets the trade updates subscription for the <paramref name="symbol"/> asset.
            </summary>
            <param name="symbol">Alpaca asset name.</param>
            <returns>
            Subscription object for tracking updates via the <see cref="E:Alpaca.Markets.IAlpacaDataSubscription`1.Received"/> event.
            </returns>
        </member>
        <member name="M:Alpaca.Markets.IAlpacaDataStreamingClient.GetQuoteSubscription(System.String)">
            <summary>
            Gets the quote updates subscription for the <paramref name="symbol"/> asset.
            </summary>
            <param name="symbol">Alpaca asset name.</param>
            <returns>
            Subscription object for tracking updates via the <see cref="E:Alpaca.Markets.IAlpacaDataSubscription`1.Received"/> event.
            </returns>
        </member>
        <member name="M:Alpaca.Markets.IAlpacaDataStreamingClient.GetMinuteAggSubscription">
            <summary>
            Gets the minute aggregate (bar) subscription for the all assets.
            </summary>
            <returns>
            Subscription object for tracking updates via the <see cref="E:Alpaca.Markets.IAlpacaDataSubscription`1.Received"/> event.
            </returns>
        </member>
        <member name="M:Alpaca.Markets.IAlpacaDataStreamingClient.GetMinuteAggSubscription(System.String)">
            <summary>
            Gets the minute aggregate (bar) subscription for the <paramref name="symbol"/> asset.
            </summary>
            <param name="symbol">Alpaca asset name.</param>
            <returns>
            Subscription object for tracking updates via the <see cref="E:Alpaca.Markets.IAlpacaDataSubscription`1.Received"/> event.
            </returns>
        </member>
        <member name="M:Alpaca.Markets.IAlpacaDataStreamingClient.Subscribe(Alpaca.Markets.IAlpacaDataSubscription)">
            <summary>
            Subscribes the single <paramref name="subscription"/> object for receiving data from the server.
            </summary>
            <param name="subscription">Subscription target - asset and update type holder.</param>
        </member>
        <member name="M:Alpaca.Markets.IAlpacaDataStreamingClient.Subscribe(Alpaca.Markets.IAlpacaDataSubscription[])">
            <summary>
            Subscribes several <paramref name="subscriptions"/> objects for receiving data from the server.
            </summary>
            <param name="subscriptions">List of subscription targets - assets and update type holders.</param>
        </member>
        <member name="M:Alpaca.Markets.IAlpacaDataStreamingClient.Subscribe(System.Collections.Generic.IEnumerable{Alpaca.Markets.IAlpacaDataSubscription})">
            <summary>
            Subscribes several <paramref name="subscriptions"/> objects for receiving data from the server.
            </summary>
            <param name="subscriptions">List of subscription targets - assets and update type holders.</param>
        </member>
        <member name="M:Alpaca.Markets.IAlpacaDataStreamingClient.Unsubscribe(Alpaca.Markets.IAlpacaDataSubscription)">
            <summary>
            Unsubscribes the single <paramref name="subscription"/> object for receiving data from the server.
            </summary>
            <param name="subscription">Subscription target - asset and update type holder.</param>
        </member>
        <member name="M:Alpaca.Markets.IAlpacaDataStreamingClient.Unsubscribe(Alpaca.Markets.IAlpacaDataSubscription[])">
            <summary>
            Unsubscribes several <paramref name="subscriptions"/> objects for receiving data from the server.
            </summary>
            <param name="subscriptions">List of subscription targets - assets and update type holders.</param>
        </member>
        <member name="M:Alpaca.Markets.IAlpacaDataStreamingClient.Unsubscribe(System.Collections.Generic.IEnumerable{Alpaca.Markets.IAlpacaDataSubscription})">
            <summary>
            Unsubscribes several <paramref name="subscriptions"/> objects for receiving data from the server.
            </summary>
            <param name="subscriptions">List of subscription targets - assets and update type holders.</param>
        </member>
        <member name="T:Alpaca.Markets.IAlpacaDataSubscription">
            <summary>
            Encapsulates generic Alpaca Data streaming API subscription item.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.IAlpacaDataSubscription.Stream">
            <summary>
            Gets the stream name - updates type (channel name) and asset name (symbol).
            </summary>
        </member>
        <member name="P:Alpaca.Markets.IAlpacaDataSubscription.Subscribed">
            <summary>
            Gets boolean flag indicating the current subscription status of this item.
            </summary>
        </member>
        <member name="T:Alpaca.Markets.IAlpacaDataSubscription`1">
            <summary>
            Encapsulates strongly-typed Alpaca Data streaming API subscription item.
            </summary>
            <typeparam name="TApi">Streaming update concrete type.</typeparam>
        </member>
        <member name="E:Alpaca.Markets.IAlpacaDataSubscription`1.Received">
            <summary>
            Occured when a new <typeparamref name="TApi"/> item received from the stream.
            </summary>
        </member>
        <member name="T:Alpaca.Markets.IAlpacaStreamingClient">
            <summary>
            Provides unified type-safe access for Alpaca streaming API.
            </summary>
        </member>
        <member name="E:Alpaca.Markets.IAlpacaStreamingClient.OnAccountUpdate">
            <summary>
            Occurred when new account update received from stream.
            </summary>
        </member>
        <member name="E:Alpaca.Markets.IAlpacaStreamingClient.OnTradeUpdate">
            <summary>
            Occurred when new trade update received from stream.
            </summary>
        </member>
        <member name="T:Alpaca.Markets.IAlpacaTradingClient">
            <summary>
            Provides unified type-safe access for Alpaca Trading API via HTTP/REST.
            </summary>
        </member>
        <member name="M:Alpaca.Markets.IAlpacaTradingClient.ListWatchListsAsync(System.Threading.CancellationToken)">
            <summary>
            Gets list of watch list objects from Alpaca REST API endpoint.
            </summary>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
            <returns>Read-only list of watch list objects.</returns>
        </member>
        <member name="M:Alpaca.Markets.IAlpacaTradingClient.CreateWatchListAsync(Alpaca.Markets.NewWatchListRequest,System.Threading.CancellationToken)">
            <summary>
            Add new watch list object into Alpaca REST API endpoint.
            </summary>
            <param name="request">New watch list request parameters.</param>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
            <returns>Newly created watch list object.</returns>
        </member>
        <member name="M:Alpaca.Markets.IAlpacaTradingClient.GetWatchListByIdAsync(System.Guid,System.Threading.CancellationToken)">
            <summary>
            Get watch list object from Alpaca REST API endpoint by watch list identifier.
            </summary>
            <param name="watchListId">Unique watch list identifier.</param>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
            <returns>Watch list object with proper <paramref name="watchListId"/> value.</returns>
        </member>
        <member name="M:Alpaca.Markets.IAlpacaTradingClient.GetWatchListByNameAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Get watch list object from Alpaca REST API endpoint by watch list user-defined name.
            </summary>
            <param name="name">User defined watch list name.</param>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
            <returns>Watch list object with proper <paramref name="name"/> value.</returns>
        </member>
        <member name="M:Alpaca.Markets.IAlpacaTradingClient.UpdateWatchListByIdAsync(Alpaca.Markets.UpdateWatchListRequest,System.Threading.CancellationToken)">
            <summary>
            Updates watch list object from Alpaca REST API endpoint by watch list identifier.
            </summary>
            <param name="request">Update watch list request parameters.</param>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
            <returns>Updated watch list object with proper <paramref name="request.WatchListId.WatchListId"/> value.</returns>
        </member>
        <member name="M:Alpaca.Markets.IAlpacaTradingClient.AddAssetIntoWatchListByIdAsync(Alpaca.Markets.ChangeWatchListRequest{System.Guid},System.Threading.CancellationToken)">
            <summary>
            Adds asset into watch list using Alpaca REST API endpoint by watch list identifier.
            </summary>
            <param name="request">Asset adding request parameters.</param>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
            <returns>Updated watch list object with proper <paramref name="request.Key.Key"/> value.</returns>
        </member>
        <member name="M:Alpaca.Markets.IAlpacaTradingClient.AddAssetIntoWatchListByNameAsync(Alpaca.Markets.ChangeWatchListRequest{System.String},System.Threading.CancellationToken)">
            <summary>
            Adds asset into watch list using Alpaca REST API endpoint by watch list name.
            </summary>
            <param name="request">Asset adding request parameters.</param>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
            <returns>Updated watch list object with proper <paramref name="request.Key.Key"/> value.</returns>
        </member>
        <member name="M:Alpaca.Markets.IAlpacaTradingClient.DeleteAssetFromWatchListByIdAsync(Alpaca.Markets.ChangeWatchListRequest{System.Guid},System.Threading.CancellationToken)">
            <summary>
            Deletes asset from watch list using Alpaca REST API endpoint by watch list identifier.
            </summary>
            <param name="request">Asset deleting request parameters.</param>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
            <returns>Updated watch list object with proper <paramref name="request.Key.Key"/> value.</returns>
        </member>
        <member name="M:Alpaca.Markets.IAlpacaTradingClient.DeleteAssetFromWatchListByNameAsync(Alpaca.Markets.ChangeWatchListRequest{System.String},System.Threading.CancellationToken)">
            <summary>
            Deletes asset from watch list using Alpaca REST API endpoint by watch list name.
            </summary>
            <param name="request">Asset deleting request parameters.</param>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
            <returns>Updated watch list object with proper <paramref name="request.Key.Key"/> value.</returns>
        </member>
        <member name="M:Alpaca.Markets.IAlpacaTradingClient.DeleteWatchListByIdAsync(System.Guid,System.Threading.CancellationToken)">
            <summary>
            Deletes watch list from Alpaca REST API endpoint by watch list identifier.
            </summary>
            <param name="watchListId">Unique watch list identifier.</param>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
            <returns>Returns <c>true</c> if operation completed successfully.</returns>
        </member>
        <member name="M:Alpaca.Markets.IAlpacaTradingClient.DeleteWatchListByNameAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Deletes watch list from Alpaca REST API endpoint by watch list name.
            </summary>
            <param name="name">User defined watch list name.</param>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
            <returns>Returns <c>true</c> if operation completed successfully.</returns>
        </member>
        <member name="M:Alpaca.Markets.IAlpacaTradingClient.ListOrdersAsync(Alpaca.Markets.ListOrdersRequest,System.Threading.CancellationToken)">
            <summary>
            Gets list of available orders from Alpaca REST API endpoint.
            </summary>
            <param name="request">List orders request parameters.</param>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
            <returns>Read-only list of order information objects.</returns>
        </member>
        <member name="M:Alpaca.Markets.IAlpacaTradingClient.PostOrderAsync(Alpaca.Markets.NewOrderRequest,System.Threading.CancellationToken)">
            <summary>
            Creates new order for execution using Alpaca REST API endpoint.
            </summary>
            <param name="request">New order placement request parameters.</param>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
            <returns>Read-only order information object for newly created order.</returns>
        </member>
        <member name="M:Alpaca.Markets.IAlpacaTradingClient.PostOrderAsync(Alpaca.Markets.OrderBase,System.Threading.CancellationToken)">
            <summary>
            Creates new order for execution using Alpaca REST API endpoint.
            </summary>
            <param name="orderBase">New order placement request parameters.</param>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
            <returns>Read-only order information object for newly created order.</returns>
        </member>
        <member name="M:Alpaca.Markets.IAlpacaTradingClient.PatchOrderAsync(Alpaca.Markets.ChangeOrderRequest,System.Threading.CancellationToken)">
            <summary>
            Updates existing order using Alpaca REST API endpoint.
            </summary>
            <param name="request">Patch order request parameters.</param>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
            <returns>Read-only order information object for updated order.</returns>
        </member>
        <member name="M:Alpaca.Markets.IAlpacaTradingClient.GetOrderAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Get single order information by client order ID from Alpaca REST API endpoint.
            </summary>
            <param name="clientOrderId">Client order ID for searching.</param>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
            <returns>Read-only order information object.</returns>
        </member>
        <member name="M:Alpaca.Markets.IAlpacaTradingClient.GetOrderAsync(System.Guid,System.Threading.CancellationToken)">
            <summary>
            Get single order information by server order ID from Alpaca REST API endpoint.
            </summary>
            <param name="orderId">Server order ID for searching.</param>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
            <returns>Read-only order information object.</returns>
        </member>
        <member name="M:Alpaca.Markets.IAlpacaTradingClient.DeleteOrderAsync(System.Guid,System.Threading.CancellationToken)">
            <summary>
            Deletes/cancel order on server by server order ID using Alpaca REST API endpoint.
            </summary>
            <param name="orderId">Server order ID for cancelling.</param>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
            <returns><c>True</c> if order cancellation was accepted.</returns>
        </member>
        <member name="M:Alpaca.Markets.IAlpacaTradingClient.DeleteAllOrdersAsync(System.Threading.CancellationToken)">
            <summary>
            Deletes/cancel all open orders using Alpaca REST API endpoint.
            </summary>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
            <returns>List of order cancellation status objects.</returns>
        </member>
        <member name="M:Alpaca.Markets.IAlpacaTradingClient.GetAccountAsync(System.Threading.CancellationToken)">
            <summary>
            Gets account information from Alpaca REST API endpoint.
            </summary>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
            <returns>Read-only account information.</returns>
        </member>
        <member name="M:Alpaca.Markets.IAlpacaTradingClient.GetAccountConfigurationAsync(System.Threading.CancellationToken)">
            <summary>
            Gets account configuration settings from Alpaca REST API endpoint.
            </summary>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
            <returns>Mutable version of account configuration object.</returns>
        </member>
        <member name="M:Alpaca.Markets.IAlpacaTradingClient.PatchAccountConfigurationAsync(Alpaca.Markets.IAccountConfiguration,System.Threading.CancellationToken)">
            <summary>
            Updates account configuration settings using Alpaca REST API endpoint.
            </summary>
            <param name="accountConfiguration">New account configuration object for updating.</param>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
            <returns>Mutable version of updated account configuration object.</returns>
        </member>
        <member name="M:Alpaca.Markets.IAlpacaTradingClient.ListAccountActivitiesAsync(Alpaca.Markets.AccountActivitiesRequest,System.Threading.CancellationToken)">
            <summary>
            Gets list of account activities from Alpaca REST API endpoint by specific activity.
            </summary>
            <param name="request">Account activities request parameters.</param>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
            <returns>Read-only list of account activity record objects.</returns>
        </member>
        <member name="M:Alpaca.Markets.IAlpacaTradingClient.GetPortfolioHistoryAsync(Alpaca.Markets.PortfolioHistoryRequest,System.Threading.CancellationToken)">
            <summary>
            Gets portfolio equity history from Alpaca REST API endpoint.
            </summary>
            <param name="request">Portfolio history request parameters.</param>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
            <returns>Read-only portfolio history information object.</returns>
        </member>
        <member name="M:Alpaca.Markets.IAlpacaTradingClient.ListAssetsAsync(Alpaca.Markets.AssetsRequest,System.Threading.CancellationToken)">
            <summary>
            Gets list of available assets from Alpaca REST API endpoint.
            </summary>
            <param name="request">Asset list request parameters.</param>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
            <returns>Read-only list of asset information objects.</returns>
        </member>
        <member name="M:Alpaca.Markets.IAlpacaTradingClient.GetAssetAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Get single asset information by asset name from Alpaca REST API endpoint.
            </summary>
            <param name="symbol">Asset name for searching.</param>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
            <returns>Read-only asset information.</returns>
        </member>
        <member name="M:Alpaca.Markets.IAlpacaTradingClient.ListPositionsAsync(System.Threading.CancellationToken)">
            <summary>
            Gets list of available positions from Alpaca REST API endpoint.
            </summary>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
            <returns>Read-only list of position information objects.</returns>
        </member>
        <member name="M:Alpaca.Markets.IAlpacaTradingClient.GetPositionAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Gets position information by asset name from Alpaca REST API endpoint.
            </summary>
            <param name="symbol">Position asset name.</param>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
            <returns>Read-only position information object.</returns>
        </member>
        <member name="M:Alpaca.Markets.IAlpacaTradingClient.DeleteAllPositionsAsync(System.Threading.CancellationToken)">
            <summary>
            Liquidates all open positions at market price using Alpaca REST API endpoint.
            </summary>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
            <returns>List of position cancellation status objects.</returns>
        </member>
        <member name="M:Alpaca.Markets.IAlpacaTradingClient.DeletePositionAsync(Alpaca.Markets.DeletePositionRequest,System.Threading.CancellationToken)">
            <summary>
            Liquidate an open position at market price using Alpaca REST API endpoint.
            </summary>
            <param name="request">Position deletion request parameters.</param>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
            <returns>The <see cref="T:Alpaca.Markets.IOrder"/> object that represents the position liquidation order (for tracking).</returns>
        </member>
        <member name="M:Alpaca.Markets.IAlpacaTradingClient.GetClockAsync(System.Threading.CancellationToken)">
            <summary>
            Get current time information from Alpaca REST API endpoint.
            </summary>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
            <returns>Read-only clock information object.</returns>
        </member>
        <member name="M:Alpaca.Markets.IAlpacaTradingClient.ListCalendarAsync(Alpaca.Markets.CalendarRequest,System.Threading.CancellationToken)">
            <summary>
            Gets list of trading days from Alpaca REST API endpoint.
            </summary>
            <param name="request">Calendar items request parameters.</param>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
            <returns>Read-only list of trading date information object.</returns>
        </member>
        <member name="T:Alpaca.Markets.IAsset">
            <summary>
            Encapsulates asset information from Alpaca REST API.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.IAsset.AssetId">
            <summary>
            Gets unique asset identifier.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.IAsset.Class">
            <summary>
            Gets asset class.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.IAsset.Exchange">
            <summary>
            Gets asset source exchange.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.IAsset.Symbol">
            <summary>
            Gets asset name.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.IAsset.Status">
            <summary>
            Get asset status in API.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.IAsset.IsTradable">
            <summary>
            Returns <c>true</c> if asset is tradable.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.IAsset.Marginable">
            <summary>
            Asset is marginable or not
            </summary>
        </member>
        <member name="P:Alpaca.Markets.IAsset.Shortable">
            <summary>
            Asset is shortable or not
            </summary>
        </member>
        <member name="P:Alpaca.Markets.IAsset.EasyToBorrow">
            <summary>
            Asset is easy-to-borrow or not
            </summary>
        </member>
        <member name="T:Alpaca.Markets.ICalendar">
            <summary>
            Encapsulates single trading day information from Alpaca REST API.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.ICalendar.TradingDate">
            <summary>
            Gets trading date (in UTC time zone).
            </summary>
        </member>
        <member name="P:Alpaca.Markets.ICalendar.TradingDateEst">
            <summary>
            Gets trading date in EST time zone.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.ICalendar.TradingDateUtc">
            <summary>
            Gets trading date in UTC time zone.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.ICalendar.TradingOpenTime">
            <summary>
            Gets trading date open time in UTC time zone.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.ICalendar.TradingOpenTimeEst">
            <summary>
            Gets trading date open time in EST time zone.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.ICalendar.TradingOpenTimeUtc">
            <summary>
            Gets trading date open time in UTC time zone.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.ICalendar.TradingCloseTime">
            <summary>
            Gets trading date close time (in UTC time zone).
            </summary>
        </member>
        <member name="P:Alpaca.Markets.ICalendar.TradingCloseTimeEst">
            <summary>
            Gets trading date close time in EST time zone.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.ICalendar.TradingCloseTimeUtc">
            <summary>
            Gets trading date close time in UTC time zone.
            </summary>
        </member>
        <member name="T:Alpaca.Markets.IClock">
            <summary>
            Encapsulates current trading date information from Alpaca REST API.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.IClock.Timestamp">
            <summary>
            Gets current timestamp (in UTC time zone).
            </summary>
        </member>
        <member name="P:Alpaca.Markets.IClock.TimestampUtc">
            <summary>
            Gets current timestamp in UTC time zone.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.IClock.IsOpen">
            <summary>
            Returns <c>true</c> if trading day is open now.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.IClock.NextOpen">
            <summary>
            Gets nearest trading day open time (in UTC time zone).
            </summary>
        </member>
        <member name="P:Alpaca.Markets.IClock.NextOpenUtc">
            <summary>
            Gets nearest trading day open time in UTC time zone.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.IClock.NextClose">
            <summary>
            Gets nearest trading day close time (in UTC time zone).
            </summary>
        </member>
        <member name="P:Alpaca.Markets.IClock.NextCloseUtc">
            <summary>
            Gets nearest trading day close time in UTC time zone.
            </summary>
        </member>
        <member name="T:Alpaca.Markets.IExchange">
            <summary>
            Encapsulates exchange information from Ploygon REST API.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.IExchange.ExchangeId">
            <summary>
            Gets exchange unique identifier.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.IExchange.ExchangeType">
            <summary>
            Gets exchange type.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.IExchange.MarketDataType">
            <summary>
            Gets market data type.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.IExchange.MarketIdentificationCode">
            <summary>
            Gets exchange market identification code.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.IExchange.Name">
            <summary>
            Gets exchange name.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.IExchange.TapeId">
            <summary>
            Gets exchange tape ID.
            </summary>
        </member>
        <member name="T:Alpaca.Markets.IHistoricalBase">
            <summary>
            Encapsulates base historical information from Polygon REST API.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.IHistoricalBase.Tape">
            <summary>
            Gets tape where trade occured.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.IHistoricalBase.SequenceNumber">
            <summary>
            Gets sequence number of trade.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.IHistoricalBase.Conditions">
            <summary>
            Gets quote conditions.
            </summary>
        </member>
        <member name="T:Alpaca.Markets.IHistoricalItems`1">
            <summary>
            Encapsulates read-only access for historical items in Polygon REST API.
            </summary>
            <typeparam name="TItem">Type of historical items inside this container.</typeparam>
        </member>
        <member name="P:Alpaca.Markets.IHistoricalItems`1.Status">
            <summary>
            Gets resulting status of historical data request.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.IHistoricalItems`1.Symbol">
            <summary>
            Gets asset name for all historical items in container.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.IHistoricalItems`1.Items">
            <summary>
            Gets read-only collection of historical items.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.IHistoricalItems`1.Adjusted">
            <summary>
            Indicates if this response was adjusted for splits.
            Polygon v2 API only.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.IHistoricalItems`1.QueryCount">
            <summary>
            Number of aggregates (minutes or days) used to generate the response.
            Polygon v2 API only.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.IHistoricalItems`1.ResultsCount">
            <summary>
            Total number of results generated.
            Polygon v2 API only.
            </summary>
        </member>
        <member name="T:Alpaca.Markets.IHistoricalQuote">
            <summary>
            Encapsulates historical quote information from Polygon REST API.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.IHistoricalQuote.Indicators">
            <summary>
            Gets indicators.
            </summary>
        </member>
        <member name="T:Alpaca.Markets.IHistoricalTrade">
            <summary>
            Encapsulates historical trade information from Polygon REST API.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.IHistoricalTrade.ExchangeId">
            <summary>
            Gets trade source exchange identifier.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.IHistoricalTrade.Price">
            <summary>
            Gets trade price.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.IHistoricalTrade.Size">
            <summary>
            Gets trade quantity.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.IHistoricalTrade.TradeReportingFacilityId">
            <summary>
            Gets trade reporting facility ID.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.IHistoricalTrade.TradeId">
            <summary>
            Gets trade ID.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.IHistoricalTrade.OriginalTradeId">
            <summary>
            Gets original trade ID.
            </summary>
        </member>
        <member name="T:Alpaca.Markets.ILastQuote">
            <summary>
            Encapsulates last quote information from Alpaca REST API.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.ILastQuote.Status">
            <summary>
            Gets quote response status.
            </summary>
        </member>
        <member name="T:Alpaca.Markets.ILastTrade">
            <summary>
            Encapsulates last trade information from Polygon REST API.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.ILastTrade.Status">
            <summary>
            Gets request status.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.ILastTrade.Symbol">
            <summary>
            Gets asset name.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.ILastTrade.Exchange">
            <summary>
            Gets asset's exchange identifier.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.ILastTrade.Price">
            <summary>
            Gets trade price level.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.ILastTrade.Size">
            <summary>
            Gets trade quantity.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.ILastTrade.Time">
            <summary>
            Gets trade timestamp.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.ILastTrade.TimeUtc">
            <summary>
            Gets trade timestamp.
            </summary>
        </member>
        <member name="T:Alpaca.Markets.IOrder">
            <summary>
            Encapsulates order information from Alpaca REST API.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.IOrder.OrderId">
            <summary>
            Gets unique server-side order identifier.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.IOrder.ClientOrderId">
            <summary>
            Gets client-side order identifier.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.IOrder.CreatedAt">
            <summary>
            Gets order creation timestamp.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.IOrder.CreatedAtUtc">
            <summary>
            Gets order creation timestamp in UTC time zone.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.IOrder.UpdatedAt">
            <summary>
            Gets last order update timestamp.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.IOrder.UpdatedAtUtc">
            <summary>
            Gets last order update timestamp in UTC time zone.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.IOrder.SubmittedAt">
            <summary>
            Gets order submission timestamp.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.IOrder.SubmittedAtUtc">
            <summary>
            Gets order submission timestamp in UTC time zone.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.IOrder.FilledAt">
            <summary>
            Gets order fill timestamp.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.IOrder.FilledAtUtc">
            <summary>
            Gets order fill timestamp in UTC time zone.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.IOrder.ExpiredAt">
            <summary>
            Gets order expiration timestamp.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.IOrder.ExpiredAtUtc">
            <summary>
            Gets order expiration timestamp in UTC time zone.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.IOrder.CancelledAt">
            <summary>
            Gets order cancellation timestamp.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.IOrder.CancelledAtUtc">
            <summary>
            Gets order cancellation timestamp in UTC time zone.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.IOrder.FailedAt">
            <summary>
            Gets order rejection timestamp.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.IOrder.FailedAtUtc">
            <summary>
            Gets order rejection timestamp in UTC time zone.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.IOrder.AssetId">
            <summary>
            Gets unique asset identifier.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.IOrder.Symbol">
            <summary>
            Gets asset name.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.IOrder.AssetClass">
            <summary>
            Gets asset class.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.IOrder.Quantity">
            <summary>
            Gets original order quantity.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.IOrder.FilledQuantity">
            <summary>
            Gets filled order quantity.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.IOrder.OrderType">
            <summary>
            Gets order type.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.IOrder.OrderSide">
            <summary>
            Gets order side (buy or sell).
            </summary>
        </member>
        <member name="P:Alpaca.Markets.IOrder.TimeInForce">
            <summary>
            Gets order duration.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.IOrder.LimitPrice">
            <summary>
            Gets order limit price for limit and stop-limit orders.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.IOrder.StopPrice">
            <summary>
            Gets order stop price for stop and stop-limit orders.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.IOrder.TrailOffsetInDollars">
            <summary>
            Gets the profit taking limit price for advanced order types.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.IOrder.TrailOffsetInPercent">
            <summary>
            Gets the stop loss stop price for advanced order types.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.IOrder.HighWaterMark">
            <summary>
            Gets the current high water mark price for trailing stop orders.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.IOrder.AverageFillPrice">
            <summary>
            Gets order average fill price.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.IOrder.OrderStatus">
            <summary>
            Gets current order status.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.IOrder.Legs">
            <summary>
            Gets legs for this order.
            </summary>
        </member>
        <member name="T:Alpaca.Markets.IOrderActionStatus">
            <summary>
            Encapsulates order action status information from Alpaca REST API.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.IOrderActionStatus.OrderId">
            <summary>
            Gets unique server-side order identifier.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.IOrderActionStatus.IsSuccess">
            <summary>
            Returns <c>true</c> if requested action completed successfully.
            </summary>
        </member>
        <member name="T:Alpaca.Markets.IPolygonDataClient">
            <summary>
            Provides unified type-safe access for Polygon Data API via HTTP/REST.
            </summary>
        </member>
        <member name="M:Alpaca.Markets.IPolygonDataClient.ListExchangesAsync(System.Threading.CancellationToken)">
            <summary>
            Gets list of available exchanges from Polygon REST API endpoint.
            </summary>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
            <returns>Read-only list of exchange information objects.</returns>
        </member>
        <member name="M:Alpaca.Markets.IPolygonDataClient.GetSymbolTypeMapAsync(System.Threading.CancellationToken)">
            <summary>
            Gets mapping dictionary for symbol types from Polygon REST API endpoint.
            </summary>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
            <returns>
            Read-only dictionary with keys equal to symbol type abbreviation and values
            equal to full symbol type names descriptions for each supported symbol type.
            </returns>
        </member>
        <member name="M:Alpaca.Markets.IPolygonDataClient.ListHistoricalTradesAsync(Alpaca.Markets.HistoricalRequest,System.Threading.CancellationToken)">
            <summary>
            Gets list of historical trades for a single asset from Polygon's REST API endpoint.
            </summary>
            <param name="request">Historical trades request parameter.</param>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
            <returns>Read-only list of historical trade information.</returns>
        </member>
        <member name="M:Alpaca.Markets.IPolygonDataClient.ListHistoricalQuotesAsync(Alpaca.Markets.HistoricalRequest,System.Threading.CancellationToken)">
            <summary>
            Gets list of historical trades for a single asset from Polygon's REST API endpoint.
            </summary>
            <param name="request">Historical quotes request parameter.</param>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
            <returns>Read-only list of historical trade information.</returns>
        </member>
        <member name="M:Alpaca.Markets.IPolygonDataClient.ListAggregatesAsync(Alpaca.Markets.AggregatesRequest,System.Threading.CancellationToken)">
            <summary>
            Gets list of historical minute bars for single asset from Polygon's v2 REST API endpoint.
            </summary>
            <param name="request">Day aggregates request parameter.</param>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
            <returns>Read-only list of day bars for specified asset.</returns>
        </member>
        <member name="M:Alpaca.Markets.IPolygonDataClient.GetLastTradeAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Gets last trade for singe asset from Polygon REST API endpoint.
            </summary>
            <param name="symbol">Asset name for data retrieval.</param>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
            <returns>Read-only last trade information.</returns>
        </member>
        <member name="M:Alpaca.Markets.IPolygonDataClient.GetLastQuoteAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Gets current quote for singe asset from Polygon REST API endpoint.
            </summary>
            <param name="symbol">Asset name for data retrieval.</param>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
            <returns>Read-only current quote information.</returns>
        </member>
        <member name="M:Alpaca.Markets.IPolygonDataClient.GetConditionMapAsync(Alpaca.Markets.TickType,System.Threading.CancellationToken)">
            <summary>
            Gets mapping dictionary for specific tick type from Polygon REST API endpoint.
            </summary>
            <param name="tickType">Tick type for conditions map.</param>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
            <returns>
            Read-only dictionary with keys equal to condition integer values and values
            equal to full tick condition descriptions for each supported tick type.
            </returns>
        </member>
        <member name="T:Alpaca.Markets.IPolygonStreamingClient">
            <summary>
            Provides unified type-safe access for Polygon streaming API via websockets.
            </summary>
        </member>
        <member name="E:Alpaca.Markets.IPolygonStreamingClient.TradeReceived">
            <summary>
            Occured when new trade received from stream.
            </summary>
        </member>
        <member name="E:Alpaca.Markets.IPolygonStreamingClient.QuoteReceived">
            <summary>
            Occured when new quote received from stream.
            </summary>
        </member>
        <member name="E:Alpaca.Markets.IPolygonStreamingClient.MinuteAggReceived">
            <summary>
            Occured when new bar received from stream.
            </summary>
        </member>
        <member name="E:Alpaca.Markets.IPolygonStreamingClient.SecondAggReceived">
            <summary>
            Occured when new bar received from stream.
            </summary>
        </member>
        <member name="M:Alpaca.Markets.IPolygonStreamingClient.SubscribeTrade(System.String)">
            <summary>
            Subscribes for the trade updates via <see cref="E:Alpaca.Markets.PolygonStreamingClient.TradeReceived"/>
            event for specific asset from Polygon streaming API.
            </summary>
            <param name="symbol">Asset name for subscription change.</param>
        </member>
        <member name="M:Alpaca.Markets.IPolygonStreamingClient.SubscribeQuote(System.String)">
            <summary>
            Subscribes for the quote updates via <see cref="E:Alpaca.Markets.PolygonStreamingClient.QuoteReceived"/>
            event for specific asset from Polygon streaming API.
            </summary>
            <param name="symbol">Asset name for subscription change.</param>
        </member>
        <member name="M:Alpaca.Markets.IPolygonStreamingClient.SubscribeSecondAgg(System.String)">
            <summary>
            Subscribes for the second bar updates via <see cref="E:Alpaca.Markets.PolygonStreamingClient.SecondAggReceived"/>
            event for specific asset from Polygon streaming API.
            </summary>
            <param name="symbol">Asset name for subscription change.</param>
        </member>
        <member name="M:Alpaca.Markets.IPolygonStreamingClient.SubscribeMinuteAgg(System.String)">
            <summary>
            Subscribes for the minute bar updates via <see cref="E:Alpaca.Markets.PolygonStreamingClient.MinuteAggReceived"/>
            event for specific asset from Polygon streaming API.
            </summary>
            <param name="symbol">Asset name for subscription change.</param>
        </member>
        <member name="M:Alpaca.Markets.IPolygonStreamingClient.SubscribeTrade(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Subscribes for the trade updates via <see cref="E:Alpaca.Markets.PolygonStreamingClient.TradeReceived"/>
            event for specific asset from Polygon streaming API.
            </summary>
            <param name="symbols">List of asset names for subscription change.</param>
        </member>
        <member name="M:Alpaca.Markets.IPolygonStreamingClient.SubscribeQuote(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Subscribes for the quote updates via <see cref="E:Alpaca.Markets.PolygonStreamingClient.QuoteReceived"/>
            event for specific asset from Polygon streaming API.
            </summary>
            <param name="symbols">List of asset names for subscription change.</param>
        </member>
        <member name="M:Alpaca.Markets.IPolygonStreamingClient.SubscribeSecondAgg(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Subscribes for the second bar updates via <see cref="E:Alpaca.Markets.PolygonStreamingClient.SecondAggReceived"/>
            event for specific asset from Polygon streaming API.
            </summary>
            <param name="symbols">List of asset names for subscription change.</param>
        </member>
        <member name="M:Alpaca.Markets.IPolygonStreamingClient.SubscribeMinuteAgg(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Subscribes for the minute bar updates via <see cref="E:Alpaca.Markets.PolygonStreamingClient.MinuteAggReceived"/>
            event for specific asset from Polygon streaming API.
            </summary>
            <param name="symbols">List of asset names for subscription change.</param>
        </member>
        <member name="M:Alpaca.Markets.IPolygonStreamingClient.UnsubscribeTrade(System.String)">
            <summary>
            Unsubscribes from the trade updates via <see cref="E:Alpaca.Markets.PolygonStreamingClient.TradeReceived"/>
            event for specific asset from Polygon streaming API.
            </summary>
            <param name="symbol">Asset name for subscription change.</param>
        </member>
        <member name="M:Alpaca.Markets.IPolygonStreamingClient.UnsubscribeQuote(System.String)">
            <summary>
            Unsubscribes from the quote updates via <see cref="E:Alpaca.Markets.PolygonStreamingClient.QuoteReceived"/>
            event for specific asset from Polygon streaming API.
            </summary>
            <param name="symbol">Asset name for subscription change.</param>
        </member>
        <member name="M:Alpaca.Markets.IPolygonStreamingClient.UnsubscribeSecondAgg(System.String)">
            <summary>
            Unsubscribes from the second bar updates via <see cref="E:Alpaca.Markets.PolygonStreamingClient.SecondAggReceived"/>
            event for specific asset from Polygon streaming API.
            </summary>
            <param name="symbol">Asset name for subscription change.</param>
        </member>
        <member name="M:Alpaca.Markets.IPolygonStreamingClient.UnsubscribeMinuteAgg(System.String)">
            <summary>
            Unsubscribes from the minute bar updates via <see cref="E:Alpaca.Markets.PolygonStreamingClient.MinuteAggReceived"/>
            event for specific asset from Polygon streaming API.
            </summary>
            <param name="symbol">Asset name for subscription change.</param>
        </member>
        <member name="M:Alpaca.Markets.IPolygonStreamingClient.UnsubscribeTrade(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Unsubscribes from the trade updates via <see cref="E:Alpaca.Markets.PolygonStreamingClient.TradeReceived"/>
            event for specific asset from Polygon streaming API.
            </summary>
            <param name="symbols">List of asset names for subscription change.</param>
        </member>
        <member name="M:Alpaca.Markets.IPolygonStreamingClient.UnsubscribeQuote(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Unsubscribes from the quote updates via <see cref="E:Alpaca.Markets.PolygonStreamingClient.QuoteReceived"/>
            event for specific asset from Polygon streaming API.
            </summary>
            <param name="symbols">List of asset names for subscription change.</param>
        </member>
        <member name="M:Alpaca.Markets.IPolygonStreamingClient.UnsubscribeSecondAgg(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Unsubscribes from the second bar updates via <see cref="E:Alpaca.Markets.PolygonStreamingClient.SecondAggReceived"/>
            event for specific asset from Polygon streaming API.
            </summary>
            <param name="symbols">List of asset names for subscription change.</param>
        </member>
        <member name="M:Alpaca.Markets.IPolygonStreamingClient.UnsubscribeMinuteAgg(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Unsubscribes from the minute bar updates via <see cref="E:Alpaca.Markets.PolygonStreamingClient.MinuteAggReceived"/>
            event for specific asset from Polygon streaming API.
            </summary>
            <param name="symbols">List of asset names for subscription change.</param>
        </member>
        <member name="T:Alpaca.Markets.IPortfolioHistory">
            <summary>
            Encapsulates portfolio history information from Alpaca REST API.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.IPortfolioHistory.Items">
            <summary>
            Gets historical information items list with timestamps.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.IPortfolioHistory.TimeFrame">
            <summary>
            Gets time frame value for this historical view.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.IPortfolioHistory.BaseValue">
            <summary>
            Gets base value for this historical view.
            </summary>
        </member>
        <member name="T:Alpaca.Markets.IPortfolioHistoryItem">
            <summary>
            Encapsulates portfolio history information item from Alpaca REST API.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.IPortfolioHistoryItem.Equity">
            <summary>
            Gets historical equity value.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.IPortfolioHistoryItem.ProfitLoss">
            <summary>
            Gets historical profit/loss value.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.IPortfolioHistoryItem.ProfitLossPercentage">
            <summary>
            Gets historical profit/loss value as percentages.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.IPortfolioHistoryItem.Timestamp">
            <summary>
            Gets historical timestamp value.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.IPortfolioHistoryItem.TimestampUtc">
            <summary>
            Gets historical timestamp value in UTC time zone.
            </summary>
        </member>
        <member name="T:Alpaca.Markets.IPosition">
            <summary>
            Encapsulates position information from Alpaca REST API.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.IPosition.AccountId">
            <summary>
            Gets unique account identifier.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.IPosition.AssetId">
            <summary>
            Gets unique asset identifier.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.IPosition.Symbol">
            <summary>
            Gets asset name.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.IPosition.Exchange">
            <summary>
            Gets asset exchange.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.IPosition.AssetClass">
            <summary>
            Gets asset class.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.IPosition.AverageEntryPrice">
            <summary>
            Gets average entry price for position.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.IPosition.Quantity">
            <summary>
            Get position quantity (size).
            </summary>
        </member>
        <member name="P:Alpaca.Markets.IPosition.Side">
            <summary>
            Get position side (short or long).
            </summary>
        </member>
        <member name="P:Alpaca.Markets.IPosition.MarketValue">
            <summary>
            Get current position market value.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.IPosition.CostBasis">
            <summary>
            Get position cost basis.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.IPosition.UnrealizedProfitLoss">
            <summary>
            Get position unrealized profit loss.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.IPosition.UnrealizedProfitLossPercent">
            <summary>
            Get position unrealized profit loss in percent.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.IPosition.IntradayUnrealizedProfitLoss">
            <summary>
            Get position intraday unrealized profit loss.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.IPosition.IntradayUnrealizedProfitLossPercent">
            <summary>
            Get position intraday unrealized profit loss in percent.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.IPosition.AssetCurrentPrice">
            <summary>
            Gets position's asset current price.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.IPosition.AssetLastPrice">
            <summary>
            Gets position's asset last trade price.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.IPosition.AssetChangePercent">
            <summary>
            Gets position's asset price change in percent.
            </summary>
        </member>
        <member name="T:Alpaca.Markets.IPositionActionStatus">
            <summary>
            Encapsulates position action status information from Alpaca REST API.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.IPositionActionStatus.Symbol">
            <summary>
            Gets processed position asset name.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.IPositionActionStatus.IsSuccess">
            <summary>
            Returns <c>true</c> if requested action completed successfully.
            </summary>
        </member>
        <member name="T:Alpaca.Markets.IQuoteBase`1">
            <summary>
            Encapsulates basic quote information any REST API.
            </summary>
            <typeparam name="TExchange">Type of bid/ask exchange properties.</typeparam>
        </member>
        <member name="P:Alpaca.Markets.IQuoteBase`1.BidExchange">
            <summary>
            Gets identifier of bid source exchange.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.IQuoteBase`1.AskExchange">
            <summary>
            Gets identifier of ask source exchange.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.IQuoteBase`1.BidPrice">
            <summary>
            Gets bid price level.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.IQuoteBase`1.AskPrice">
            <summary>
            Gets ask price level.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.IQuoteBase`1.BidSize">
            <summary>
            Gets bid quantity.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.IQuoteBase`1.AskSize">
            <summary>
            Gets ask quantity.
            </summary>
        </member>
        <member name="T:Alpaca.Markets.IRequestWithTimeInterval`1">
            <summary>
            Encapsulates access point for setting time interval filtering on request instance.
            </summary>
            <typeparam name="TInterval">The sort of time interval (inclusive or exclusive).</typeparam>
        </member>
        <member name="M:Alpaca.Markets.IRequestWithTimeInterval`1.SetInterval(`0)">
            <summary>
            Sets time interval value for the current request instance.
            </summary>
        </member>
        <member name="T:Alpaca.Markets.IStreamAgg">
            <summary>
            Encapsulates bar information from Polygon streaming API.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.IStreamAgg.Average">
            <summary>
            Gets bar average price.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.IStreamAgg.StartTime">
            <summary>
            Gets bar opening timestamp.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.IStreamAgg.StartTimeUtc">
            <summary>
            Gets bar opening timestamp in UTC time zone.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.IStreamAgg.EndTime">
            <summary>
            Gets bar closing timestamp.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.IStreamAgg.EndTimeUtc">
            <summary>
            Gets bar closing timestamp in UTC time zone.
            </summary>
        </member>
        <member name="T:Alpaca.Markets.IStreamBase">
            <summary>
            Encapsulates base streaming item information from data streaming API.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.IStreamBase.Symbol">
            <summary>
            Gets asset name.
            </summary>
        </member>
        <member name="T:Alpaca.Markets.IStreamQuote">
            <summary>
            Encapsulates quote information from Polygon streaming API.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.IStreamQuote.Time">
            <summary>
            Gets quote timestamp.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.IStreamQuote.TimeUtc">
            <summary>
            Gets quote timestamp in UTC time zone.
            </summary>
        </member>
        <member name="T:Alpaca.Markets.IStreamTrade">
            <summary>
            Encapsulates trade information from Polygon streaming API.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.IStreamTrade.TradeId">
            <summary>
            Gets trade identifier.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.IStreamTrade.Exchange">
            <summary>
            Gets asset's exchange identifier.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.IStreamTrade.Price">
            <summary>
            Gets trade price level.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.IStreamTrade.Size">
            <summary>
            Gets trade quantity.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.IStreamTrade.Time">
            <summary>
            Gets trade timestamp.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.IStreamTrade.TimeUtc">
            <summary>
            Gets trade timestamp in UTC time zone.
            </summary>
        </member>
        <member name="T:Alpaca.Markets.ITimeInterval">
            <summary>
            Encapsulates time interval (from and till date/time points) for filtering requires.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.ITimeInterval.From">
            <summary>
            Gets the starting date/time point of filtering interval.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.ITimeInterval.Into">
            <summary>
            Gets the ending date/time point of filtering interval.
            </summary>
        </member>
        <member name="T:Alpaca.Markets.IInclusiveTimeInterval">
            <summary>
            Represents the inclusive version of the <see cref="T:Alpaca.Markets.ITimeInterval"/> interface.
            </summary>
        </member>
        <member name="T:Alpaca.Markets.IExclusiveTimeInterval">
            <summary>
            Represents the exclusive version of the <see cref="T:Alpaca.Markets.ITimeInterval"/> interface.
            </summary>
        </member>
        <member name="T:Alpaca.Markets.ITimestamps">
            <summary>
            Encapsulates timestamps information from Polygon REST API.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.ITimestamps.Timestamp">
            <summary>
            Gets SIP timestamp.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.ITimestamps.TimestampUtc">
            <summary>
            Gets SIP timestamp in UTC time zone.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.ITimestamps.ParticipantTimestamp">
            <summary>
            Gets participant/exchange timestamp.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.ITimestamps.ParticipantTimestampUtc">
            <summary>
            Gets participant/exchange timestamp in UTC time zone.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.ITimestamps.TradeReportingFacilityTimestamp">
            <summary>
            Gets trade reporting facility timestamp.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.ITimestamps.TradeReportingFacilityTimestampUtc">
            <summary>
            Gets trade reporting facility timestamp in UTC time zone.
            </summary>
        </member>
        <member name="T:Alpaca.Markets.ITradeUpdate">
            <summary>
            Encapsulates trade update information from Alpaca streaming API.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.ITradeUpdate.Event">
            <summary>
            Gets trade update reason.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.ITradeUpdate.Price">
            <summary>
            Gets updated trade price level.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.ITradeUpdate.Quantity">
            <summary>
            Gets updated trade quantity.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.ITradeUpdate.Timestamp">
            <summary>
            Gets update timestamp.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.ITradeUpdate.TimestampUtc">
            <summary>
            Gets update timestamp in UTC time zone.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.ITradeUpdate.Order">
            <summary>
            Gets related order object.
            </summary>
        </member>
        <member name="T:Alpaca.Markets.IWatchList">
            <summary>
            Encapsulates watch list information from Alpaca REST API.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.IWatchList.WatchListId">
            <summary>
            Gets unique watch list identifier.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.IWatchList.Created">
            <summary>
            Gets watch list creation time.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.IWatchList.CreatedUtc">
            <summary>
            Gets watch list creation time in UTC time zone.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.IWatchList.Updated">
            <summary>
            Gets watch list last update time.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.IWatchList.UpdatedUtc">
            <summary>
            Gets watch list last update time in UTC time zone.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.IWatchList.Name">
            <summary>
            Gets watch list user-defined name.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.IWatchList.AccountId">
            <summary>
            Gets <see cref="P:Alpaca.Markets.IAccountBase.AccountId"/> fro this watch list.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.IWatchList.Assets">
            <summary>
            Gets the content of this watchlist, in the order as registered by the client.
            </summary>
        </member>
        <member name="T:Alpaca.Markets.AdvancedOrderBase">
            <summary>
            Encapsulates base data for advanced order types, never used directly by any code.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.AdvancedOrderBase.OrderClass">
            <summary>
            Gets or sets the order class for advanced order types.
            </summary>
        </member>
        <member name="T:Alpaca.Markets.BracketOrder">
            <summary>
            Encapsulates data required for placing bracket order on the Alpaca REST API.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.BracketOrder.TakeProfit">
            <summary>
            Gets prices for take profit order for the bracket order.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.BracketOrder.StopLoss">
            <summary>
            Gets prices for stop loss order for the bracket order.
            </summary>
        </member>
        <member name="T:Alpaca.Markets.IStopLoss">
            <summary>
            Encapsulates the price information about the stop loss order.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.IStopLoss.StopPrice">
            <summary>
            Gets the stop loss stop price.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.IStopLoss.LimitPrice">
            <summary>
            Gets the stop loss limit price.
            </summary>
        </member>
        <member name="T:Alpaca.Markets.ITakeProfit">
            <summary>
            Encapsulates the price information about the take profit order.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.ITakeProfit.LimitPrice">
            <summary>
            Gets the profit taking limit price.
            </summary>
        </member>
        <member name="T:Alpaca.Markets.LimitOrder">
            <summary>
            Encapsulates data required for placing the limit order on the Alpaca REST API.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.LimitOrder.LimitPrice">
            <summary>
            Gets or sets the new order limit price.
            </summary>
        </member>
        <member name="M:Alpaca.Markets.LimitOrder.Buy(System.String,System.Int64,System.Decimal)">
            <summary>
            Creates new buy market order using specified symbol and quantity.
            </summary>
            <param name="symbol">Order asset name.</param>
            <param name="quantity">Order quantity.</param>
            <param name="limitPrice">Order limit price.</param>
            <returns>The new <see cref="T:Alpaca.Markets.LimitOrder"/> object instance.</returns>
        </member>
        <member name="M:Alpaca.Markets.LimitOrder.Sell(System.String,System.Int64,System.Decimal)">
            <summary>
            Creates new sell market order using specified symbol and quantity.
            </summary>
            <param name="symbol">Order asset name.</param>
            <param name="quantity">Order quantity.</param>
            <param name="limitPrice">Order limit price.</param>
            <returns>The new <see cref="T:Alpaca.Markets.LimitOrder"/> object instance.</returns>
        </member>
        <member name="M:Alpaca.Markets.LimitOrder.OneCancelsOther(System.Decimal,System.Nullable{System.Decimal})">
            <summary>
            Creates a new instance of the <see cref="T:Alpaca.Markets.OneCancelsOtherOrder"/> order from the current order.
            </summary>
            <param name="stopLossStopPrice">Stop loss order stop price.</param>
            <param name="stopLossLimitPrice">Stop loss order limit price (optional).</param>
            <returns>New advanced order representing pair of original order and stop loss order.</returns>
        </member>
        <member name="T:Alpaca.Markets.MarketOrder">
            <summary>
            Encapsulates data required for placing the market order on the Alpaca REST API.
            </summary>
        </member>
        <member name="M:Alpaca.Markets.MarketOrder.Buy(System.String,System.Int64)">
            <summary>
            Creates new buy market order using specified symbol and quantity.
            </summary>
            <param name="symbol">Order asset name.</param>
            <param name="quantity">Order quantity.</param>
            <returns>The new <see cref="T:Alpaca.Markets.MarketOrder"/> object instance.</returns>
        </member>
        <member name="M:Alpaca.Markets.MarketOrder.Sell(System.String,System.Int64)">
            <summary>
            Creates new sell market order using specified symbol and quantity.
            </summary>
            <param name="symbol">Order asset name.</param>
            <param name="quantity">Order quantity.</param>
            <returns>The new <see cref="T:Alpaca.Markets.MarketOrder"/> object instance.</returns>
        </member>
        <member name="T:Alpaca.Markets.OneCancelsOtherOrder">
            <summary>
            Encapsulates data required for placing OCO order on the Alpaca REST API.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.OneCancelsOtherOrder.TakeProfit">
            <summary>
            Gets prices for take profit order for the OCO order.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.OneCancelsOtherOrder.StopLoss">
            <summary>
            Gets prices for stop loss order for the OCO order.
            </summary>
        </member>
        <member name="T:Alpaca.Markets.OrderBase">
            <summary>
            Encapsulates base data for any order types, never used directly by any code.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.OrderBase.Symbol">
            <summary>
            Gets the new order asset name.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.OrderBase.Quantity">
            <summary>
            Gets the new order quantity.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.OrderBase.Side">
            <summary>
            Gets the new order side (buy or sell).
            </summary>
        </member>
        <member name="P:Alpaca.Markets.OrderBase.Type">
            <summary>
            Gets the new order type.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.OrderBase.Duration">
            <summary>
            Gets the new order duration.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.OrderBase.ClientOrderId">
            <summary>
            Gets or sets the client order ID.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.OrderBase.ExtendedHours">
            <summary>
            Gets or sets flag indicating that order should be allowed to execute during extended hours trading.
            </summary>
        </member>
        <member name="T:Alpaca.Markets.OrderBaseExtensions">
            <summary>
            Set of extensions methods for implementing the fluent interface for the <see cref="T:Alpaca.Markets.OrderBase"/> inheritors.
            </summary>
        </member>
        <member name="M:Alpaca.Markets.OrderBaseExtensions.WithDuration``1(``0,Alpaca.Markets.TimeInForce)">
            <summary>
            Sets the new value for the <see cref="P:Alpaca.Markets.OrderBase.Duration"/> property of the target order.
            </summary>
            <param name="order">Target order for changing <see cref="P:Alpaca.Markets.OrderBase.Duration"/> property.</param>
            <param name="duration">The new <see cref="P:Alpaca.Markets.OrderBase.Duration"/> property value.</param>
            <typeparam name="TOrder">Type of target order for altering.</typeparam>
            <returns>Fluent interface - returns the <paramref name="order"/> object.</returns>
        </member>
        <member name="M:Alpaca.Markets.OrderBaseExtensions.WithClientOrderId``1(``0,System.String)">
            <summary>
            Sets the new value for the <see cref="P:Alpaca.Markets.OrderBase.ClientOrderId"/> property of the target order.
            </summary>
            <param name="order">Target order for changing <see cref="P:Alpaca.Markets.OrderBase.ClientOrderId"/> property.</param>
            <param name="clientOrderId">The new <see cref="P:Alpaca.Markets.OrderBase.ClientOrderId"/> property value.</param>
            <typeparam name="TOrder">Type of target order for altering.</typeparam>
            <returns>Fluent interface - returns the <paramref name="order"/> object.</returns>
        </member>
        <member name="M:Alpaca.Markets.OrderBaseExtensions.WithExtendedHours``1(``0,System.Boolean)">
            <summary>
            Sets the new value for the <see cref="P:Alpaca.Markets.OrderBase.ExtendedHours"/> property of the target order.
            </summary>
            <param name="order">Target order for changing <see cref="P:Alpaca.Markets.OrderBase.ExtendedHours"/> property.</param>
            <param name="extendedHours">The new <see cref="P:Alpaca.Markets.OrderBase.ExtendedHours"/> property value.</param>
            <typeparam name="TOrder">Type of target order for altering.</typeparam>
            <returns>Fluent interface - returns the <paramref name="order"/> object.</returns>
        </member>
        <member name="T:Alpaca.Markets.OrderSideExtensions">
            <summary>
            Set of extensions methods for creating the <see cref="T:Alpaca.Markets.OrderBase"/> inheritors.
            </summary>
        </member>
        <member name="M:Alpaca.Markets.OrderSideExtensions.Market(Alpaca.Markets.OrderSide,System.String,System.Int64)">
            <summary>
            Creates new market order using specified side, symbol, and quantity.
            </summary>
            <param name="orderSide">Order side (buy or sell).</param>
            <param name="symbol">Order asset name.</param>
            <param name="quantity">Order quantity.</param>
            <returns>The new <see cref="T:Alpaca.Markets.MarketOrder"/> object instance.</returns>
        </member>
        <member name="M:Alpaca.Markets.OrderSideExtensions.Stop(Alpaca.Markets.OrderSide,System.String,System.Int64,System.Decimal)">
            <summary>
            Creates new stop order using specified side, symbol, quantity, and stop price.
            </summary>
            <param name="orderSide">Order side (buy or sell).</param>
            <param name="symbol">Order asset name.</param>
            <param name="quantity">Order quantity.</param>
            <param name="stopPrice">Order stop price.</param>
            <returns>The new <see cref="T:Alpaca.Markets.StopOrder"/> object instance.</returns>
        </member>
        <member name="M:Alpaca.Markets.OrderSideExtensions.Limit(Alpaca.Markets.OrderSide,System.String,System.Int64,System.Decimal)">
            <summary>
            Creates new limit order using specified side, symbol, quantity, and limit price.
            </summary>
            <param name="orderSide">Order side (buy or sell).</param>
            <param name="symbol">Order asset name.</param>
            <param name="quantity">Order quantity.</param>
            <param name="limitPrice">Order limit price.</param>
            <returns>The new <see cref="T:Alpaca.Markets.LimitOrder"/> object instance.</returns>
        </member>
        <member name="M:Alpaca.Markets.OrderSideExtensions.StopLimit(Alpaca.Markets.OrderSide,System.String,System.Int64,System.Decimal,System.Decimal)">
            <summary>
            Creates new limit order using specified side, symbol, quantity, stop, and limit prices.
            </summary>
            <param name="orderSide">Order side (buy or sell).</param>
            <param name="symbol">Order asset name.</param>
            <param name="quantity">Order quantity.</param>
            <param name="stopPrice">Order stop price.</param>
            <param name="limitPrice">Order limit price.</param>
            <returns>The new <see cref="T:Alpaca.Markets.StopLimitOrder"/> object instance.</returns>
        </member>
        <member name="M:Alpaca.Markets.OrderSideExtensions.TrailingStop(Alpaca.Markets.OrderSide,System.String,System.Int64,Alpaca.Markets.TrailOffset)">
            <summary>
            Creates new trailing stop order using specified side, symbol, quantity, and trail offset.
            </summary>
            <param name="orderSide">Order side (buy or sell).</param>
            <param name="symbol">Order asset name.</param>
            <param name="quantity">Order quantity.</param>
            <param name="trailOffset">Order trail offset.</param>
            <returns>The new <see cref="T:Alpaca.Markets.TrailingStopOrder"/> object instance.</returns>
        </member>
        <member name="T:Alpaca.Markets.SimpleOrderBase">
            <summary>
            Encapsulates base data for ordinal order types, never used directly by any code.
            </summary>
        </member>
        <member name="M:Alpaca.Markets.SimpleOrderBase.TakeProfit(System.Decimal)">
            <summary>
            Creates a new instance of the <see cref="T:Alpaca.Markets.TakeProfitOrder"/> order from the current order.
            </summary>
            <param name="takeProfitLimitPrice">Take profit order limit price.</param>
            <returns>New advanced order representing pair of original order and take profit order.</returns>
        </member>
        <member name="M:Alpaca.Markets.SimpleOrderBase.StopLoss(System.Decimal,System.Nullable{System.Decimal})">
            <summary>
            Creates a new instance of the <see cref="T:Alpaca.Markets.StopLossOrder"/> order from the current order.
            </summary>
            <param name="stopLossStopPrice">Stop loss order stop price.</param>
            <param name="stopLossLimitPrice">Stop loss order limit price (optional).</param>
            <returns>New advanced order representing pair of original order and stop loss order.</returns>
        </member>
        <member name="M:Alpaca.Markets.SimpleOrderBase.Bracket(System.Decimal,System.Decimal,System.Nullable{System.Decimal})">
            <summary>
            Creates a new instance of the <see cref="T:Alpaca.Markets.BracketOrder"/> order from the current order.
            </summary>
            <param name="takeProfitLimitPrice">Take profit order limit price.</param>
            <param name="stopLossStopPrice">Stop loss order stop price.</param>
            <param name="stopLossLimitPrice">Stop loss order limit price (optional).</param>
            <returns>New advanced order representing an original order plus pair of take profit and stop loss orders.</returns>
        </member>
        <member name="T:Alpaca.Markets.StopLimitOrder">
            <summary>
            Encapsulates data required for placing the stop limit order on the Alpaca REST API.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.StopLimitOrder.StopPrice">
            <summary>
            Gets or sets the new order stop price.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.StopLimitOrder.LimitPrice">
            <summary>
            Gets or sets the new order limit price.
            </summary>
        </member>
        <member name="M:Alpaca.Markets.StopLimitOrder.Buy(System.String,System.Int64,System.Decimal,System.Decimal)">
            <summary>
            Creates new buy stop limit order using specified symbol and quantity.
            </summary>
            <param name="symbol">Order asset name.</param>
            <param name="quantity">Order quantity.</param>
            <param name="stopPrice">Order stop price.</param>
            <param name="limitPrice">Order limit price.</param>
            <returns>The new <see cref="T:Alpaca.Markets.StopLimitOrder"/> object instance.</returns>
        </member>
        <member name="M:Alpaca.Markets.StopLimitOrder.Sell(System.String,System.Int64,System.Decimal,System.Decimal)">
            <summary>
            Creates new sell stop limit order using specified symbol and quantity.
            </summary>
            <param name="symbol">Order asset name.</param>
            <param name="quantity">Order quantity.</param>
            <param name="stopPrice">Order stop price.</param>
            <param name="limitPrice">Order limit price.</param>
            <returns>The new <see cref="T:Alpaca.Markets.StopLimitOrder"/> object instance.</returns>
        </member>
        <member name="T:Alpaca.Markets.StopLossOrder">
            <summary>
            Encapsulates data required for placing stop loss order on the Alpaca REST API.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.StopLossOrder.StopPrice">
            <inheritdoc />
        </member>
        <member name="P:Alpaca.Markets.StopLossOrder.LimitPrice">
            <inheritdoc />
        </member>
        <member name="T:Alpaca.Markets.StopOrder">
            <summary>
            Encapsulates data required for placing the stop order on the Alpaca REST API.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.StopOrder.StopPrice">
            <summary>
            Gets or sets the new order stop price.
            </summary>
        </member>
        <member name="M:Alpaca.Markets.StopOrder.Buy(System.String,System.Int64,System.Decimal)">
            <summary>
            Creates new buy stop order using specified symbol and quantity.
            </summary>
            <param name="symbol">Order asset name.</param>
            <param name="quantity">Order quantity.</param>
            <param name="stopPrice">Order stop price.</param>
            <returns>The new <see cref="T:Alpaca.Markets.StopOrder"/> object instance.</returns>
        </member>
        <member name="M:Alpaca.Markets.StopOrder.Sell(System.String,System.Int64,System.Decimal)">
            <summary>
            Creates new sell buy order using specified symbol and quantity.
            </summary>
            <param name="symbol">Order asset name.</param>
            <param name="quantity">Order quantity.</param>
            <param name="stopPrice">Order stop price.</param>
            <returns>The new <see cref="T:Alpaca.Markets.StopOrder"/> object instance.</returns>
        </member>
        <member name="T:Alpaca.Markets.TakeProfitOrder">
            <summary>
            Encapsulates data required for placing take profit order on the Alpaca REST API.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.TakeProfitOrder.LimitPrice">
            <inheritdoc />
        </member>
        <member name="T:Alpaca.Markets.TrailingStopOrder">
            <summary>
            Encapsulates data required for placing the market order on the Alpaca REST API.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.TrailingStopOrder.TrailOffset">
            <summary>
            Gets order trail offset value (in dollars or percents).
            </summary>
        </member>
        <member name="M:Alpaca.Markets.TrailingStopOrder.Buy(System.String,System.Int64,Alpaca.Markets.TrailOffset)">
            <summary>
            Creates new buy market order using specified symbol and quantity.
            </summary>
            <param name="symbol">Order asset name.</param>
            <param name="quantity">Order quantity.</param>
            <param name="trailOffset">Trailing stop order offset.</param>
            <returns>The new <see cref="T:Alpaca.Markets.MarketOrder"/> object instance.</returns>
        </member>
        <member name="M:Alpaca.Markets.TrailingStopOrder.Sell(System.String,System.Int64,Alpaca.Markets.TrailOffset)">
            <summary>
            Creates new sell market order using specified symbol and quantity.
            </summary>
            <param name="symbol">Order asset name.</param>
            <param name="quantity">Order quantity.</param>
            <param name="trailOffset">Trailing stop order offset.</param>
            <returns>The new <see cref="T:Alpaca.Markets.MarketOrder"/> object instance.</returns>
        </member>
        <member name="T:Alpaca.Markets.TrailOffset">
            <summary>
            Represents the trailing stop order offset in dollars or as percent of HWM.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.TrailOffset.Value">
            <summary>
            Gets the trailing stop order price offset value.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.TrailOffset.IsInDollars">
            <summary>
            Returns <c>true</c> if trail offset is an amount in dollars.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.TrailOffset.IsInPercent">
            <summary>
            Returns <c>true</c> if trail offset is a percent of HWM value.
            </summary>
        </member>
        <member name="M:Alpaca.Markets.TrailOffset.InDollars(System.Decimal)">
            <summary>
            Creates new instance of the <see cref="T:Alpaca.Markets.TrailOffset"/> object
            initialized with <paramref name="value"/> as dollars amount.
            </summary>
            <param name="value">Trailing stop order offset in dollars.</param>
            <returns>Initialized <see cref="T:Alpaca.Markets.TrailOffset"/> object.</returns>
        </member>
        <member name="M:Alpaca.Markets.TrailOffset.InPercent(System.Decimal)">
            <summary>
            Creates new instance of the <see cref="T:Alpaca.Markets.TrailOffset"/> object
            initialized with <paramref name="value"/> as percent of HWM.
            </summary>
            <param name="value">Trailing stop order offset in percents.</param>
            <returns>Initialized <see cref="T:Alpaca.Markets.TrailOffset"/> object.</returns>
        </member>
        <member name="M:Alpaca.Markets.TrailOffset.Equals(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Alpaca.Markets.TrailOffset.GetHashCode">
            <inheritdoc />
        </member>
        <member name="M:Alpaca.Markets.TrailOffset.Equals(Alpaca.Markets.TrailOffset)">
            <inheritdoc />
        </member>
        <member name="M:Alpaca.Markets.TrailOffset.op_Equality(Alpaca.Markets.TrailOffset,Alpaca.Markets.TrailOffset)">
            <summary>
            Returns <c>true</c> if <paramref name="lhs"/> are equal to <paramref name="rhs"/>.
            </summary>
            <param name="lhs">Left hand side object.</param>
            <param name="rhs">Right hand side object.</param>
            <returns>True if both objects are equal.</returns>
        </member>
        <member name="M:Alpaca.Markets.TrailOffset.op_Inequality(Alpaca.Markets.TrailOffset,Alpaca.Markets.TrailOffset)">
            <summary>
            Returns <c>true</c> if <paramref name="lhs"/> are not equal to <paramref name="rhs"/>.
            </summary>
            <param name="lhs">Left hand side object.</param>
            <param name="rhs">Right hand side object.</param>
            <returns>True if both objects are not equal.</returns>
        </member>
        <member name="T:Alpaca.Markets.AccountActivitiesRequest">
            <summary>
            Encapsulates request parameters for <see cref="M:Alpaca.Markets.AlpacaTradingClient.ListAccountActivitiesAsync(Alpaca.Markets.AccountActivitiesRequest,System.Threading.CancellationToken)"/> call.
            </summary>
        </member>
        <member name="M:Alpaca.Markets.AccountActivitiesRequest.#ctor">
            <summary>
            Creates new instance of <see cref="T:Alpaca.Markets.AccountActivitiesRequest"/> object for all activity types.
            </summary>
        </member>
        <member name="M:Alpaca.Markets.AccountActivitiesRequest.#ctor(Alpaca.Markets.AccountActivityType)">
            <summary>
            Creates new instance of <see cref="T:Alpaca.Markets.AccountActivitiesRequest"/> object for a single activity types.
            </summary>
            <param name="activityType">The activity type you want to view entries for.</param>
        </member>
        <member name="M:Alpaca.Markets.AccountActivitiesRequest.#ctor(System.Collections.Generic.IEnumerable{Alpaca.Markets.AccountActivityType})">
            <summary>
            Creates new instance of <see cref="T:Alpaca.Markets.BarSetRequest"/> object for several activity types.
            </summary>
            <param name="activityTypes">The list of activity types you want to view entries for.</param>
        </member>
        <member name="P:Alpaca.Markets.AccountActivitiesRequest.ActivityTypes">
            <summary>
            Gets the activity types you want to view entries for. Empty list means 'all activity types'.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.AccountActivitiesRequest.Date">
            <summary>
            Gets the date for which you want to see activities.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.AccountActivitiesRequest.TimeInterval">
            <summary>
            Gets inclusive date interval for filtering items in response.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.AccountActivitiesRequest.Until">
            <summary>
            Gets the upper date limit for requesting only activities submitted before this date.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.AccountActivitiesRequest.After">
            <summary>
            Gets the lover date limit for requesting only activities submitted after this date.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.AccountActivitiesRequest.Direction">
            <summary>
            Gets or sets the sorting direction for results.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.AccountActivitiesRequest.PageSize">
            <summary>
            Gets or sets the maximum number of entries to return in the response.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.AccountActivitiesRequest.PageToken">
            <summary>
            Gets or sets the ID of the end of your current page of results.
            </summary>
        </member>
        <member name="M:Alpaca.Markets.AccountActivitiesRequest.SetSingleDate(System.DateTime)">
            <summary>
            Sets filtering for single <paramref name="date"/> activities.
            </summary>
            <param name="date">Target date for filtering activities.</param>
            <returns>Fluent interface method return same <see cref="T:Alpaca.Markets.AccountActivitiesRequest"/> instance.</returns>
        </member>
        <member name="M:Alpaca.Markets.AccountActivitiesRequest.SetInclusiveTimeIntervalWithNulls(System.Nullable{System.DateTime},System.Nullable{System.DateTime})">
            <summary>
            Sets filtering for activities from <paramref name="dateFrom"/> to <paramref name="dateInto"/> inclusive.
            </summary>
            <param name="dateFrom">Filtering interval start time.</param>
            <param name="dateInto">Filtering interval end time.</param>
            <returns>Fluent interface method return same <see cref="T:Alpaca.Markets.AccountActivitiesRequest"/> instance.</returns>
        </member>
        <member name="T:Alpaca.Markets.AggregatesRequest">
            <summary>
            Encapsulates request parameters for <see cref="M:Alpaca.Markets.PolygonDataClient.ListAggregatesAsync(Alpaca.Markets.AggregatesRequest,System.Threading.CancellationToken)"/> call.
            </summary>
        </member>
        <member name="M:Alpaca.Markets.AggregatesRequest.#ctor(System.String,Alpaca.Markets.AggregationPeriod)">
            <summary>
            Creates new instance of <see cref="T:Alpaca.Markets.AggregatesRequest"/> object.
            </summary>
            <param name="symbol">Asset name for data retrieval.</param>
            <param name="period">Aggregation time span (number or bars and base bar size).</param>
        </member>
        <member name="P:Alpaca.Markets.AggregatesRequest.Symbol">
            <summary>
            Gets asset name for data retrieval.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.AggregatesRequest.Period">
            <summary>
            Gets aggregation time span (number or bars and base bar size).
            </summary>
        </member>
        <member name="P:Alpaca.Markets.AggregatesRequest.TimeInterval">
            <summary>
            Gets inclusive date interval for filtering items in response.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.AggregatesRequest.DateFrom">
            <summary>
            Gets start time for filtering (inclusive).
            </summary>
        </member>
        <member name="P:Alpaca.Markets.AggregatesRequest.DateInto">
            <summary>
            Gets end time for filtering (inclusive).
            </summary>
        </member>
        <member name="P:Alpaca.Markets.AggregatesRequest.Unadjusted">
            <summary>
            Gets or sets flag indicated that the results should not be adjusted for splits.
            </summary>
        </member>
        <member name="T:Alpaca.Markets.AggregationPeriod">
            <summary>
            Encapsulates account history period request duration - value and unit pair.
            </summary>
        </member>
        <member name="M:Alpaca.Markets.AggregationPeriod.#ctor(System.Int32,Alpaca.Markets.AggregationPeriodUnit)">
            <summary>
            Creates new instance of <see cref="T:Alpaca.Markets.AggregationPeriod"/> object.
            </summary>
            <param name="value">Duration value in units.</param>
            <param name="unit">Duration units (days, weeks, etc.)</param>
        </member>
        <member name="P:Alpaca.Markets.AggregationPeriod.Unit">
            <summary>
            Gets specified duration units.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.AggregationPeriod.Value">
            <summary>
            Gets specified duration value.
            </summary>
        </member>
        <member name="M:Alpaca.Markets.AggregationPeriod.Equals(Alpaca.Markets.AggregationPeriod)">
            <inheritdoc />
        </member>
        <member name="M:Alpaca.Markets.AggregationPeriod.ToString">
            <inheritdoc />
        </member>
        <member name="M:Alpaca.Markets.AggregationPeriod.Equals(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Alpaca.Markets.AggregationPeriod.GetHashCode">
            <inheritdoc />
        </member>
        <member name="M:Alpaca.Markets.AggregationPeriod.op_Equality(Alpaca.Markets.AggregationPeriod,Alpaca.Markets.AggregationPeriod)">
            <summary>
            Returns <c>true</c> if compared objects are equal.
            </summary>
            <param name="lhs">Left hand side for compare./</param>
            <param name="rhs">Right hand side for compare.</param>
            <returns>Returns <c>true</c> if compared objects are equal.</returns>
        </member>
        <member name="M:Alpaca.Markets.AggregationPeriod.op_Inequality(Alpaca.Markets.AggregationPeriod,Alpaca.Markets.AggregationPeriod)">
            <summary>
            Returns <c>true</c> if compared objects are not equal.
            </summary>
            <param name="lhs">Left hand side for compare./</param>
            <param name="rhs">Right hand side for compare.</param>
            <returns>Returns <c>true</c> if compared objects are not equal.</returns>
        </member>
        <member name="T:Alpaca.Markets.AlpacaDataClientConfiguration">
            <summary>
            Configuration parameters object for <see cref="T:Alpaca.Markets.AlpacaDataClient"/> class.
            </summary>
        </member>
        <member name="M:Alpaca.Markets.AlpacaDataClientConfiguration.#ctor">
            <summary>
            Creates new instance of <see cref="T:Alpaca.Markets.AlpacaDataClientConfiguration"/> class.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.AlpacaDataClientConfiguration.SecurityId">
            <summary>
            Security identifier for API authentication.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.AlpacaDataClientConfiguration.ApiEndpoint">
            <summary>
            Gets or sets Alpaca Data API base URL.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.AlpacaDataClientConfiguration.ApiVersion">
            <summary>
            Gets or sets Alpaca Trading API version.
            </summary>
        </member>
        <member name="T:Alpaca.Markets.AlpacaDataStreamingClientConfiguration">
            <summary>
            Configuration parameters object for <see cref="T:Alpaca.Markets.AlpacaDataStreamingClient"/> class.
            </summary>
        </member>
        <member name="M:Alpaca.Markets.AlpacaDataStreamingClientConfiguration.#ctor">
            <summary>
            Creates new instance of <see cref="T:Alpaca.Markets.AlpacaDataStreamingClientConfiguration"/> class.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.AlpacaDataStreamingClientConfiguration.SecurityId">
            <summary>
            Gets or sets Alpaca secret key identifier.
            </summary>
        </member>
        <member name="T:Alpaca.Markets.AlpacaStreamingClientConfiguration">
            <summary>
            Configuration parameters object for <see cref="T:Alpaca.Markets.AlpacaStreamingClient"/> class.
            </summary>
        </member>
        <member name="M:Alpaca.Markets.AlpacaStreamingClientConfiguration.#ctor">
            <summary>
            Creates new instance of <see cref="T:Alpaca.Markets.AlpacaStreamingClientConfiguration"/> class.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.AlpacaStreamingClientConfiguration.SecurityId">
            <summary>
            Gets or sets Alpaca secret key identifier.
            </summary>
        </member>
        <member name="T:Alpaca.Markets.AlpacaTradingClientConfiguration">
            <summary>
            Configuration parameters object for <see cref="T:Alpaca.Markets.AlpacaTradingClient"/> class.
            </summary>
        </member>
        <member name="M:Alpaca.Markets.AlpacaTradingClientConfiguration.#ctor">
            <summary>
            Creates new instance of <see cref="T:Alpaca.Markets.AlpacaTradingClientConfiguration"/> class.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.AlpacaTradingClientConfiguration.SecurityId">
            <summary>
            Security identifier for API authentication.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.AlpacaTradingClientConfiguration.ApiEndpoint">
            <summary>
            Gets or sets Alpaca Trading API base URL.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.AlpacaTradingClientConfiguration.ApiVersion">
            <summary>
            Gets or sets Alpaca Trading API version.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.AlpacaTradingClientConfiguration.ThrottleParameters">
            <summary>
            Gets or sets REST API throttling parameters.
            </summary>
        </member>
        <member name="T:Alpaca.Markets.AssetsRequest">
            <summary>
            Encapsulates request parameters for <see cref="M:Alpaca.Markets.AlpacaTradingClient.ListAssetsAsync(Alpaca.Markets.AssetsRequest,System.Threading.CancellationToken)"/> call.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.AssetsRequest.AssetStatus">
            <summary>
            Gets or sets asset status for filtering.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.AssetsRequest.AssetClass">
            <summary>
            Gets or sets asset class for filtering.
            </summary>
        </member>
        <member name="T:Alpaca.Markets.BarSetRequest">
            <summary>
            Encapsulates request parameters for <see cref="M:Alpaca.Markets.AlpacaDataClient.GetBarSetAsync(Alpaca.Markets.BarSetRequest,System.Threading.CancellationToken)"/> call.
            </summary>
        </member>
        <member name="M:Alpaca.Markets.BarSetRequest.#ctor(System.String,Alpaca.Markets.TimeFrame)">
            <summary>
            Creates new instance of <see cref="T:Alpaca.Markets.BarSetRequest"/> object.
            </summary>
            <param name="symbol">>Asset name for data retrieval.</param>
            <param name="timeFrame">Type of time bars for retrieval.</param>
        </member>
        <member name="M:Alpaca.Markets.BarSetRequest.#ctor(System.Collections.Generic.IEnumerable{System.String},Alpaca.Markets.TimeFrame)">
            <summary>
            Creates new instance of <see cref="T:Alpaca.Markets.BarSetRequest"/> object.
            </summary>
            <param name="symbols">>Asset names for data retrieval.</param>
            <param name="timeFrame">Type of time bars for retrieval.</param>
        </member>
        <member name="P:Alpaca.Markets.BarSetRequest.Symbols">
            <summary>
            Gets immutable list of asset names for data retrieval.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.BarSetRequest.TimeFrame">
            <summary>
            Gets type of time bars for retrieval.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.BarSetRequest.Limit">
            <summary>
            Gets of sets maximal number of daily bars in data response.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.BarSetRequest.AreTimesInclusive">
            <summary>
            Gets flag indicating that both <see cref="P:Alpaca.Markets.BarSetRequest.TimeFrom"/> and <see cref="P:Alpaca.Markets.BarSetRequest.TimeInto"/> properties are treated as inclusive timestamps.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.BarSetRequest.TimeInterval">
            <summary>
            Gets inclusive or exclusive date interval for filtering items in response.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.BarSetRequest.TimeFrom">
            <summary>
            Gets start time for filtering.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.BarSetRequest.TimeInto">
            <summary>
            Gets end time for filtering.
            </summary>
        </member>
        <member name="M:Alpaca.Markets.BarSetRequest.SetInclusiveTimeIntervalWithNulls(System.Nullable{System.DateTime},System.Nullable{System.DateTime})">
            <summary>
            Sets inclusive time interval for request (start/end time included into interval if specified).
            </summary>
            <param name="start">Filtering interval start time.</param>
            <param name="end">Filtering interval end time.</param>
            <returns>Fluent interface method return same <see cref="T:Alpaca.Markets.BarSetRequest"/> instance.</returns>
        </member>
        <member name="M:Alpaca.Markets.BarSetRequest.SetExclusiveTimeIntervalWithNulls(System.Nullable{System.DateTime},System.Nullable{System.DateTime})">
            <summary>
            Sets exclusive time interval for request (start/end time not included into interval if specified).
            </summary>
            <param name="after">Filtering interval start time.</param>
            <param name="until">Filtering interval end time.</param>
            <returns>Fluent interface method return same <see cref="T:Alpaca.Markets.BarSetRequest"/> instance.</returns>
        </member>
        <member name="T:Alpaca.Markets.CalendarRequest">
            <summary>
            Encapsulates request parameters for <see cref="M:Alpaca.Markets.AlpacaTradingClient.ListCalendarAsync(Alpaca.Markets.CalendarRequest,System.Threading.CancellationToken)"/> call.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.CalendarRequest.TimeInterval">
            <summary>
            Gets inclusive date interval for filtering items in response.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.CalendarRequest.StartDateInclusive">
            <summary>
            Gets start time for filtering (inclusive).
            </summary>
        </member>
        <member name="P:Alpaca.Markets.CalendarRequest.EndDateInclusive">
            <summary>
            Gets end time for filtering (inclusive).
            </summary>
        </member>
        <member name="M:Alpaca.Markets.CalendarRequest.SetInclusiveTimeIntervalWithNulls(System.Nullable{System.DateTime},System.Nullable{System.DateTime})">
            <summary>
            Sets exclusive time interval for request (start/end time included into interval if specified).
            </summary>
            <param name="start">Filtering interval start time.</param>
            <param name="end">Filtering interval end time.</param>
            <returns>Fluent interface method return same <see cref="T:Alpaca.Markets.CalendarRequest"/> instance.</returns>
        </member>
        <member name="T:Alpaca.Markets.ChangeOrderRequest">
            <summary>
            Encapsulates request parameters for <see cref="M:Alpaca.Markets.AlpacaTradingClient.PatchOrderAsync(Alpaca.Markets.ChangeOrderRequest,System.Threading.CancellationToken)"/> call.
            </summary>
        </member>
        <member name="M:Alpaca.Markets.ChangeOrderRequest.#ctor(System.Guid)">
            <summary>
            Creates new instance of <see cref="T:Alpaca.Markets.ChangeOrderRequest"/> object.
            </summary>
            <param name="orderId">Server side order identifier.</param>
        </member>
        <member name="P:Alpaca.Markets.ChangeOrderRequest.OrderId">
            <summary>
            Gets server side order identifier.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.ChangeOrderRequest.Quantity">
            <summary>
            Gets or sets updated order quantity or <c>null</c> if quantity is not changed.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.ChangeOrderRequest.Duration">
            <summary>
            Gets or sets updated order duration or <c>null</c> if duration is not changed.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.ChangeOrderRequest.LimitPrice">
            <summary>
            Gets or sets updated order limit price or <c>null</c> if limit price is not changed.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.ChangeOrderRequest.StopPrice">
            <summary>
            Gets or sets updated order stop price or <c>null</c> if stop price is not changed.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.ChangeOrderRequest.ClientOrderId">
            <summary>
            Gets or sets updated client order ID or <c>null</c> if client order ID is not changed.
            </summary>
        </member>
        <member name="T:Alpaca.Markets.ChangeWatchListRequest`1">
            <summary>
            Encapsulates request parameters for
            <see cref="M:Alpaca.Markets.AlpacaTradingClient.AddAssetIntoWatchListByIdAsync(Alpaca.Markets.ChangeWatchListRequest{System.Guid},System.Threading.CancellationToken)"/>,
            <see cref="M:Alpaca.Markets.AlpacaTradingClient.AddAssetIntoWatchListByNameAsync(Alpaca.Markets.ChangeWatchListRequest{System.String},System.Threading.CancellationToken)"/>,
            <see cref="M:Alpaca.Markets.AlpacaTradingClient.DeleteAssetFromWatchListByIdAsync(Alpaca.Markets.ChangeWatchListRequest{System.Guid},System.Threading.CancellationToken)"/>, and
            <see cref="M:Alpaca.Markets.AlpacaTradingClient.DeleteAssetFromWatchListByNameAsync(Alpaca.Markets.ChangeWatchListRequest{System.String},System.Threading.CancellationToken)"/>
            calls.
            </summary>
            <typeparam name="TKey"></typeparam>
        </member>
        <member name="M:Alpaca.Markets.ChangeWatchListRequest`1.#ctor(`0,System.String)">
            <summary>
            Creates new instance of <see cref="T:Alpaca.Markets.ChangeWatchListRequest`1"/> object.
            </summary>
            <param name="key">Unique watch list identifier or name.</param>
            <param name="asset">Asset name for adding into watch list.</param>
        </member>
        <member name="P:Alpaca.Markets.ChangeWatchListRequest`1.Key">
            <summary>
            Gets unique watch list identifier or name.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.ChangeWatchListRequest`1.Asset">
            <summary>
            Gets asset name for adding/deleting into watch list.
            </summary>
        </member>
        <member name="T:Alpaca.Markets.DeletePositionRequest">
            <summary>
            Encapsulates request parameters for <see cref="M:Alpaca.Markets.AlpacaTradingClient.DeletePositionAsync(Alpaca.Markets.DeletePositionRequest,System.Threading.CancellationToken)"/> call.
            </summary>
        </member>
        <member name="M:Alpaca.Markets.DeletePositionRequest.#ctor(System.String)">
            <summary>
            Creates new instance of <see cref="T:Alpaca.Markets.DeletePositionRequest"/> object.
            </summary>
            <param name="symbol">Symbol for liquidation.</param>
        </member>
        <member name="P:Alpaca.Markets.DeletePositionRequest.Symbol">
            <summary>
            Gets the symbol for liquidation.
            </summary>
        </member>
        <member name="T:Alpaca.Markets.HistoricalRequest">
            <summary>
            Encapsulates request parameters for <see cref="M:Alpaca.Markets.PolygonDataClient.ListHistoricalTradesAsync(Alpaca.Markets.HistoricalRequest,System.Threading.CancellationToken)"/>
            and <see cref="M:Alpaca.Markets.PolygonDataClient.ListHistoricalQuotesAsync(Alpaca.Markets.HistoricalRequest,System.Threading.CancellationToken)"/> method calls.
            </summary>
        </member>
        <member name="M:Alpaca.Markets.HistoricalRequest.#ctor(System.String,System.DateTime)">
            <summary>
            Creates new instance of <see cref="T:Alpaca.Markets.HistoricalRequest"/> object.
            </summary>
            <param name="symbol">Asset name for data retrieval.</param>
            <param name="date">Single date for data retrieval.</param>
        </member>
        <member name="P:Alpaca.Markets.HistoricalRequest.Symbol">
            <summary>
            Gets asset name for data retrieval.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.HistoricalRequest.Date">
            <summary>
            Gets single date for data retrieval.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.HistoricalRequest.Timestamp">
            <summary>
            Gets or sets initial timestamp for request. Using the timestamp of the last result will give you the next page of results.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.HistoricalRequest.TimestampLimit">
            <summary>
            Gets or sets maximum timestamp allowed in the results.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.HistoricalRequest.Limit">
            <summary>
            Gets or sets size (number of items) limits fore the response.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.HistoricalRequest.Reverse">
            <summary>
            Gets or sets flag that indicates reversed order of the results.
            </summary>
        </member>
        <member name="T:Alpaca.Markets.HistoryPeriod">
            <summary>
            Encapsulates account history period request duration - value and unit pair.
            </summary>
        </member>
        <member name="M:Alpaca.Markets.HistoryPeriod.#ctor(System.Int32,Alpaca.Markets.HistoryPeriodUnit)">
            <summary>
            Creates new instance of <see cref="T:Alpaca.Markets.HistoryPeriod"/> object.
            </summary>
            <param name="value">Duration value in units.</param>
            <param name="unit">Duration units (days, weeks, etc.)</param>
        </member>
        <member name="P:Alpaca.Markets.HistoryPeriod.Unit">
            <summary>
            Gets specified duration units.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.HistoryPeriod.Value">
            <summary>
            Gets specified duration value.
            </summary>
        </member>
        <member name="M:Alpaca.Markets.HistoryPeriod.Equals(Alpaca.Markets.HistoryPeriod)">
            <inheritdoc />
        </member>
        <member name="M:Alpaca.Markets.HistoryPeriod.ToString">
            <inheritdoc />
        </member>
        <member name="M:Alpaca.Markets.HistoryPeriod.Equals(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Alpaca.Markets.HistoryPeriod.GetHashCode">
            <inheritdoc />
        </member>
        <member name="M:Alpaca.Markets.HistoryPeriod.op_Equality(Alpaca.Markets.HistoryPeriod,Alpaca.Markets.HistoryPeriod)">
            <summary>
            Returns <c>true</c> if compared objects are equal.
            </summary>
            <param name="lhs">Left hand side for compare./</param>
            <param name="rhs">Right hand side for compare.</param>
            <returns>Returns <c>true</c> if compared objects are equal.</returns>
        </member>
        <member name="M:Alpaca.Markets.HistoryPeriod.op_Inequality(Alpaca.Markets.HistoryPeriod,Alpaca.Markets.HistoryPeriod)">
            <summary>
            Returns <c>true</c> if compared objects are not equal.
            </summary>
            <param name="lhs">Left hand side for compare./</param>
            <param name="rhs">Right hand side for compare.</param>
            <returns>Returns <c>true</c> if compared objects are not equal.</returns>
        </member>
        <member name="T:Alpaca.Markets.ListOrdersRequest">
            <summary>
            Encapsulates request parameters for <see cref="M:Alpaca.Markets.AlpacaTradingClient.ListOrdersAsync(Alpaca.Markets.ListOrdersRequest,System.Threading.CancellationToken)"/> call.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.ListOrdersRequest.OrderStatusFilter">
            <summary>
            Gets or sets order status for filtering.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.ListOrdersRequest.OrderListSorting">
            <summary>
            Gets or sets the chronological order of response based on the submission time.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.ListOrdersRequest.TimeInterval">
            <summary>
            Gets exclusive date time interval for filtering orders in response.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.ListOrdersRequest.LimitOrderNumber">
            <summary>
            Gets or sets maximal number of orders in response.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.ListOrdersRequest.RollUpNestedOrders">
            <summary>
            Gets or sets flag for rolling up multi-leg orders under the <see cref="P:Alpaca.Markets.IOrder.Legs"/> property of primary order.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.ListOrdersRequest.AfterDateTimeExclusive">
            <summary>
            Gets lower bound date time for filtering orders until specified timestamp (exclusive).
            </summary>
        </member>
        <member name="P:Alpaca.Markets.ListOrdersRequest.UntilDateTimeExclusive">
            <summary>
            Gets upper bound date time for filtering orders until specified timestamp (exclusive).
            </summary>
        </member>
        <member name="M:Alpaca.Markets.ListOrdersRequest.SetExclusiveTimeIntervalWithNulls(System.Nullable{System.DateTime},System.Nullable{System.DateTime})">
            <summary>
            Sets exclusive time interval for request (start/end time not included into interval if specified).
            </summary>
            <param name="after">Filtering interval start time.</param>
            <param name="until">Filtering interval end time.</param>
            <returns>Fluent interface method return same <see cref="T:Alpaca.Markets.ListOrdersRequest"/> instance.</returns>
        </member>
        <member name="T:Alpaca.Markets.NewOrderRequest">
            <summary>
            Encapsulates request parameters for <see cref="M:Alpaca.Markets.AlpacaTradingClient.PostOrderAsync(Alpaca.Markets.NewOrderRequest,System.Threading.CancellationToken)"/> call.
            </summary>
        </member>
        <member name="M:Alpaca.Markets.NewOrderRequest.#ctor(System.String,System.Int64,Alpaca.Markets.OrderSide,Alpaca.Markets.OrderType,Alpaca.Markets.TimeInForce)">
            <summary>
            Creates new instance of <see cref="T:Alpaca.Markets.NewOrderRequest"/> object.
            </summary>
            <param name="symbol">Order asset name.</param>
            <param name="quantity">Order quantity.</param>
            <param name="side">Order side (buy or sell).</param>
            <param name="type">Order type.</param>
            <param name="duration">Order duration.</param>
        </member>
        <member name="P:Alpaca.Markets.NewOrderRequest.Symbol">
            <summary>
            Gets the new order asset name.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.NewOrderRequest.Quantity">
            <summary>
            Gets the new order quantity.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.NewOrderRequest.Side">
            <summary>
            Gets the new order side (buy or sell).
            </summary>
        </member>
        <member name="P:Alpaca.Markets.NewOrderRequest.Type">
            <summary>
            Gets the new order type.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.NewOrderRequest.Duration">
            <summary>
            Gets the new order duration.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.NewOrderRequest.LimitPrice">
            <summary>
            Gets or sets the new order limit price.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.NewOrderRequest.StopPrice">
            <summary>
            Gets or sets the new order stop price.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.NewOrderRequest.TrailOffsetInDollars">
            <summary>
            Gets or sets the new trailing order trail price offset in dollars.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.NewOrderRequest.TrailOffsetInPercent">
            <summary>
            Gets or sets the new trailing order trail price offset in percent.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.NewOrderRequest.ClientOrderId">
            <summary>
            Gets or sets the client order ID.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.NewOrderRequest.ExtendedHours">
            <summary>
            Gets or sets flag indicating that order should be allowed to execute during extended hours trading.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.NewOrderRequest.OrderClass">
            <summary>
            Gets or sets the order class for advanced order types.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.NewOrderRequest.TakeProfitLimitPrice">
            <summary>
            Gets or sets the profit taking limit price for advanced order types.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.NewOrderRequest.StopLossStopPrice">
            <summary>
            Gets or sets the stop loss stop price for advanced order types.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.NewOrderRequest.StopLossLimitPrice">
            <summary>
            Gets or sets the stop loss limit price for advanced order types.
            </summary>
        </member>
        <member name="T:Alpaca.Markets.NewWatchListRequest">
            <summary>
            Encapsulates request parameters for <see cref="M:Alpaca.Markets.AlpacaTradingClient.CreateWatchListAsync(Alpaca.Markets.NewWatchListRequest,System.Threading.CancellationToken)"/> call.
            </summary>
        </member>
        <member name="M:Alpaca.Markets.NewWatchListRequest.#ctor(System.String)">
            <summary>
            Creates new instance of <see cref="T:Alpaca.Markets.NewWatchListRequest"/> object.
            </summary>
            <param name="name">User defined watch list name.</param>
        </member>
        <member name="M:Alpaca.Markets.NewWatchListRequest.#ctor(System.String,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Creates new instance of <see cref="T:Alpaca.Markets.NewWatchListRequest"/> object.
            </summary>
            <param name="name">User defined watch list name.</param>
            <param name="assets">List of asset names for new watch list.</param>
        </member>
        <member name="P:Alpaca.Markets.NewWatchListRequest.Name">
            <summary>
            Gets user defined watch list name.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.NewWatchListRequest.Assets">
            <summary>
            Gets list of asset names for new watch list.
            </summary>
        </member>
        <member name="T:Alpaca.Markets.PolygonDataClientConfiguration">
            <summary>
            Configuration parameters object for <see cref="T:Alpaca.Markets.PolygonDataClient"/> class.
            </summary>
        </member>
        <member name="M:Alpaca.Markets.PolygonDataClientConfiguration.#ctor">
            <summary>
            Creates new instance of <see cref="T:Alpaca.Markets.PolygonDataClientConfiguration"/> class.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.PolygonDataClientConfiguration.KeyId">
            <summary>
            Gets or sets Alpaca application key identifier.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.PolygonDataClientConfiguration.ApiEndpoint">
            <summary>
            Gets or sets Polygon Data API base URL.
            </summary>
        </member>
        <member name="T:Alpaca.Markets.PolygonStreamingClientConfiguration">
            <summary>
            Configuration parameters object for <see cref="T:Alpaca.Markets.PolygonStreamingClient"/> class.
            </summary>
        </member>
        <member name="M:Alpaca.Markets.PolygonStreamingClientConfiguration.#ctor">
            <summary>
            Creates new instance of <see cref="T:Alpaca.Markets.PolygonStreamingClientConfiguration"/> class.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.PolygonStreamingClientConfiguration.KeyId">
            <summary>
            Gets or sets Alpaca application key identifier.
            </summary>
        </member>
        <member name="T:Alpaca.Markets.PortfolioHistoryRequest">
            <summary>
            Encapsulates request parameters for <see cref="M:Alpaca.Markets.AlpacaTradingClient.GetPortfolioHistoryAsync(Alpaca.Markets.PortfolioHistoryRequest,System.Threading.CancellationToken)"/> call.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.PortfolioHistoryRequest.TimeInterval">
            <summary>
            Gets inclusive date interval for filtering items in response.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.PortfolioHistoryRequest.StartDate">
            <summary>
            Gets or sets start date for desired history.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.PortfolioHistoryRequest.EndDate">
            <summary>
            Gets or sets  the end date for desired history. Default value (if <c>null</c>) is today.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.PortfolioHistoryRequest.TimeFrame">
            <summary>
            Gets or sets the time frame value for desired history. Default value (if <c>null</c>) is 1 minute
            for a period shorter than 7 days, 15 minutes for a period less than 30 days, or 1 day for a longer period.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.PortfolioHistoryRequest.Period">
            <summary>
            Gets or sets period value for desired history. Default value (if <c>null</c>) is 1 month.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.PortfolioHistoryRequest.ExtendedHours">
            <summary>
            Gets or sets flags, indicating that include extended hours included in the result.
            This is effective only for time frame less than 1 day.
            </summary>
        </member>
        <member name="T:Alpaca.Markets.StreamingClientConfiguration">
            <summary>
            Configuration parameters object for <see cref="T:Alpaca.Markets.StreamingClientBase`1"/> class.
            </summary>
        </member>
        <member name="M:Alpaca.Markets.StreamingClientConfiguration.#ctor(System.Uri)">
            <summary>
            Creates new instance of <see cref="T:Alpaca.Markets.StreamingClientConfiguration"/> class.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.StreamingClientConfiguration.ApiEndpoint">
            <summary>
            Gets or sets Alpaca streaming API base URL.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.StreamingClientConfiguration.WebSocketFactory">
            <summary>
            Gets or sets web sockets connection factory.
            </summary>
        </member>
        <member name="T:Alpaca.Markets.TimeInterval">
            <summary>
            Encapsulates implementations of the <see cref="T:Alpaca.Markets.ITimeInterval"/> interface and helper methods for it.
            </summary>
        </member>
        <member name="M:Alpaca.Markets.TimeInterval.IsEmpty(Alpaca.Markets.ITimeInterval)">
            <summary>
            Gets boolean flag signals that time interval is empty (both start and end date equal to <c>null</c>).
            </summary>
            <param name="interval">Target time interval for checking.</param>
            <returns>
            Returns <c>true</c> if both <see cref="P:Alpaca.Markets.ITimeInterval.From"/> and <see cref="P:Alpaca.Markets.ITimeInterval.Into"/> equal to <c>null</c>.
            </returns>
        </member>
        <member name="M:Alpaca.Markets.TimeInterval.IsOpen(Alpaca.Markets.ITimeInterval)">
            <summary>
            Gets boolean flag signals that time interval is open (both start or end date equal to <c>null</c>).
            </summary>
            <param name="interval">Target time interval for checking.</param>
            <returns>
            Returns <c>true</c> if both <see cref="P:Alpaca.Markets.ITimeInterval.From"/> or <see cref="P:Alpaca.Markets.ITimeInterval.Into"/> equal to <c>null</c>.
            </returns>
        </member>
        <member name="M:Alpaca.Markets.TimeInterval.SetInclusiveTimeInterval``1(``0,System.DateTime,System.DateTime)">
            <summary>
            Set inclusive time interval for <paramref name="request"/> object.
            </summary>
            <param name="request">Target request for setting filtering interval.</param>
            <param name="from">Starting date/time point for filtering.</param>
            <param name="into">Ending date/time point for filtering.</param>
            <returns>Fluent interface - returns <paramref name="request"/> object.</returns>
        </member>
        <member name="M:Alpaca.Markets.TimeInterval.SetTimeInterval``1(``0,Alpaca.Markets.IInclusiveTimeInterval)">
            <summary>
            Set inclusive time interval for <paramref name="request"/> object.
            </summary>
            <param name="request">Target request for setting filtering interval.</param>
            <param name="interval">Time interval (date/time pair) for filtering.</param>
            <returns>Fluent interface - returns <paramref name="request"/> object.</returns>
        </member>
        <member name="M:Alpaca.Markets.TimeInterval.GetInclusiveIntervalFromThat(System.DateTime)">
            <summary>
            Gets inclusive open time interval starting from the <paramref name="from"/> date/time point.
            </summary>
            <param name="from">Starting date/time point for filtering.</param>
            <returns>Inclusive open time interval.</returns>
        </member>
        <member name="M:Alpaca.Markets.TimeInterval.GetInclusiveIntervalTillThat(System.DateTime)">
            <summary>
            Gets inclusive open time interval ending at the <paramref name="into"/> date/time point.
            </summary>
            <param name="into">Ending date/time point for filtering.</param>
            <returns>Inclusive open time interval.</returns>
        </member>
        <member name="M:Alpaca.Markets.TimeInterval.SetExclusiveTimeInterval``1(``0,System.DateTime,System.DateTime)">
            <summary>
            Set exclusive time interval for <paramref name="request"/> object.
            </summary>
            <param name="request">Target request for setting filtering interval.</param>
            <param name="from">Starting date/time point for filtering.</param>
            <param name="into">Ending date/time point for filtering.</param>
            <returns>Fluent interface - returns <paramref name="request"/> object.</returns>
        </member>
        <member name="M:Alpaca.Markets.TimeInterval.SetTimeInterval``1(``0,Alpaca.Markets.IExclusiveTimeInterval)">
            <summary>
            Set exclusive time interval for <paramref name="request"/> object.
            </summary>
            <param name="request">Target request for setting filtering interval.</param>
            <param name="interval">Time interval (date/time pair) for filtering.</param>
            <returns>Fluent interface - returns <paramref name="request"/> object.</returns>
        </member>
        <member name="M:Alpaca.Markets.TimeInterval.GetExclusiveIntervalFromThat(System.DateTime)">
            <summary>
            Gets exclusive open time interval starting from the <paramref name="from"/> date/time point.
            </summary>
            <param name="from">Starting date/time point for filtering.</param>
            <returns>Exclusive open time interval.</returns>
        </member>
        <member name="M:Alpaca.Markets.TimeInterval.GetExclusiveIntervalTillThat(System.DateTime)">
            <summary>
            Gets exclusive open time interval ending at the <paramref name="into"/> date/time point.
            </summary>
            <param name="into">Ending date/time point for filtering.</param>
            <returns>Exclusive open time interval.</returns>
        </member>
        <member name="T:Alpaca.Markets.UpdateWatchListRequest">
            <summary>
            Encapsulates request parameters for <see cref="M:Alpaca.Markets.AlpacaTradingClient.UpdateWatchListByIdAsync(Alpaca.Markets.UpdateWatchListRequest,System.Threading.CancellationToken)"/> call.
            </summary>
        </member>
        <member name="M:Alpaca.Markets.UpdateWatchListRequest.#ctor(System.Guid,System.String,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Creates new instance of <see cref="T:Alpaca.Markets.UpdateWatchListRequest"/> object.
            </summary>
            <param name="watchListId">Unique watch list identifier.</param>
            <param name="name">User defined watch list name.</param>
            <param name="assets">List of asset names for new watch list.</param>
        </member>
        <member name="P:Alpaca.Markets.UpdateWatchListRequest.WatchListId">
            <summary>
            Gets the target watch list unique identifier.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.UpdateWatchListRequest.Name">
            <summary>
            Gets the target watch list name.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.UpdateWatchListRequest.Assets">
            <summary>
            Gets list of asset names for new watch list.
            </summary>
        </member>
        <member name="T:Alpaca.Markets.PolygonDataClient">
            <summary>
            Provides unified type-safe access for Polygon Data API via HTTP/REST.
            </summary>
        </member>
        <member name="M:Alpaca.Markets.PolygonDataClient.#ctor(Alpaca.Markets.PolygonDataClientConfiguration)">
            <summary>
            Creates new instance of <see cref="T:Alpaca.Markets.PolygonDataClient"/> object.
            </summary>
            <param name="configuration">Configuration parameters object.</param>
        </member>
        <member name="M:Alpaca.Markets.PolygonDataClient.Dispose">
            <inheritdoc />
        </member>
        <member name="M:Alpaca.Markets.PolygonDataClient.ListExchangesAsync(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Alpaca.Markets.PolygonDataClient.GetSymbolTypeMapAsync(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Alpaca.Markets.PolygonDataClient.ListHistoricalTradesAsync(Alpaca.Markets.HistoricalRequest,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Alpaca.Markets.PolygonDataClient.ListHistoricalQuotesAsync(Alpaca.Markets.HistoricalRequest,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Alpaca.Markets.PolygonDataClient.ListAggregatesAsync(Alpaca.Markets.AggregatesRequest,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Alpaca.Markets.PolygonDataClient.GetLastTradeAsync(System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Alpaca.Markets.PolygonDataClient.GetLastQuoteAsync(System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Alpaca.Markets.PolygonDataClient.GetConditionMapAsync(Alpaca.Markets.TickType,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="T:Alpaca.Markets.PolygonStreamingClient">
            <summary>
            Provides unified type-safe access for Polygon streaming API via websockets.
            </summary>
        </member>
        <member name="E:Alpaca.Markets.PolygonStreamingClient.TradeReceived">
            <inheritdoc />
        </member>
        <member name="E:Alpaca.Markets.PolygonStreamingClient.QuoteReceived">
            <inheritdoc />
        </member>
        <member name="E:Alpaca.Markets.PolygonStreamingClient.MinuteAggReceived">
            <inheritdoc />
        </member>
        <member name="E:Alpaca.Markets.PolygonStreamingClient.SecondAggReceived">
            <inheritdoc />
        </member>
        <member name="M:Alpaca.Markets.PolygonStreamingClient.#ctor(Alpaca.Markets.PolygonStreamingClientConfiguration)">
            <summary>
            Creates new instance of <see cref="T:Alpaca.Markets.PolygonStreamingClient"/> object.
            </summary>
            <param name="configuration">Configuration parameters object.</param>
        </member>
        <member name="M:Alpaca.Markets.PolygonStreamingClient.SubscribeTrade(System.String)">
            <inheritdoc />
        </member>
        <member name="M:Alpaca.Markets.PolygonStreamingClient.SubscribeQuote(System.String)">
            <inheritdoc />
        </member>
        <member name="M:Alpaca.Markets.PolygonStreamingClient.SubscribeSecondAgg(System.String)">
            <inheritdoc />
        </member>
        <member name="M:Alpaca.Markets.PolygonStreamingClient.SubscribeMinuteAgg(System.String)">
            <inheritdoc />
        </member>
        <member name="M:Alpaca.Markets.PolygonStreamingClient.SubscribeTrade(System.Collections.Generic.IEnumerable{System.String})">
            <inheritdoc />
        </member>
        <member name="M:Alpaca.Markets.PolygonStreamingClient.SubscribeQuote(System.Collections.Generic.IEnumerable{System.String})">
            <inheritdoc />
        </member>
        <member name="M:Alpaca.Markets.PolygonStreamingClient.SubscribeSecondAgg(System.Collections.Generic.IEnumerable{System.String})">
            <inheritdoc />
        </member>
        <member name="M:Alpaca.Markets.PolygonStreamingClient.SubscribeMinuteAgg(System.Collections.Generic.IEnumerable{System.String})">
            <inheritdoc />
        </member>
        <member name="M:Alpaca.Markets.PolygonStreamingClient.UnsubscribeTrade(System.String)">
            <inheritdoc />
        </member>
        <member name="M:Alpaca.Markets.PolygonStreamingClient.UnsubscribeQuote(System.String)">
            <inheritdoc />
        </member>
        <member name="M:Alpaca.Markets.PolygonStreamingClient.UnsubscribeSecondAgg(System.String)">
            <inheritdoc />
        </member>
        <member name="M:Alpaca.Markets.PolygonStreamingClient.UnsubscribeMinuteAgg(System.String)">
            <inheritdoc />
        </member>
        <member name="M:Alpaca.Markets.PolygonStreamingClient.UnsubscribeTrade(System.Collections.Generic.IEnumerable{System.String})">
            <inheritdoc />
        </member>
        <member name="M:Alpaca.Markets.PolygonStreamingClient.UnsubscribeQuote(System.Collections.Generic.IEnumerable{System.String})">
            <inheritdoc />
        </member>
        <member name="M:Alpaca.Markets.PolygonStreamingClient.UnsubscribeSecondAgg(System.Collections.Generic.IEnumerable{System.String})">
            <inheritdoc />
        </member>
        <member name="M:Alpaca.Markets.PolygonStreamingClient.UnsubscribeMinuteAgg(System.Collections.Generic.IEnumerable{System.String})">
            <inheritdoc />
        </member>
        <member name="M:Alpaca.Markets.PolygonStreamingClient.OnMessageReceived(System.String)">
            <inheritdoc/>
        </member>
        <member name="P:Alpaca.Markets.IThrottler.MaxRetryAttempts">
            <summary>
            Gets maximal number of retry attempts for single request.
            </summary>
        </member>
        <member name="M:Alpaca.Markets.IThrottler.WaitToProceed(System.Threading.CancellationToken)">
            <summary>
            Blocks the current thread indefinitely until allowed to proceed.
            </summary>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Alpaca.Markets.IThrottler.CheckHttpResponse(System.Net.Http.HttpResponseMessage)">
            <summary>
            Evaluates the StatusCode of <paramref name="response"/>, initiates any server requested delays, 
            and returns false to indicate when a client should retry a request
            </summary>
            <param name="response">Server response to an Http request</param>
            <returns>False indicates that client should retry the request.
            True indicates that StatusCode was HttpStatusCode.OK.
            </returns>
            <exception cref="T:System.Net.Http.HttpRequestException">
            The HTTP response is unsuccessful, and caller did not indicate that requests with this StatusCode should be retried.
            </exception>
        </member>
        <member name="F:Alpaca.Markets.RateThrottler.NextRetryGuard._randomRetryWait">
            <summary>
            Used to create a random length delay when server responds with a Http status like 503, but provides no Retry-After header.
            </summary>
        </member>
        <member name="F:Alpaca.Markets.RateThrottler._exitTimes">
            <summary>
            Times (in millisecond ticks) at which the semaphore should be exited.
            </summary>
        </member>
        <member name="F:Alpaca.Markets.RateThrottler._throttleSemaphore">
            <summary>
            Semaphore used to count and limit the number of occurrences per unit time.
            </summary>
        </member>
        <member name="F:Alpaca.Markets.RateThrottler._exitTimer">
            <summary>
            Timer used to trigger exiting the semaphore.
            </summary>
        </member>
        <member name="F:Alpaca.Markets.RateThrottler._timeUnitMilliseconds">
            <summary>
            The length of the time unit, in milliseconds.
            </summary>
        </member>
        <member name="F:Alpaca.Markets.RateThrottler._retryHttpStatuses">
            <summary>
            List of HTTP status codes which when received should initiate a retry of the affected request.
            </summary>
        </member>
        <member name="M:Alpaca.Markets.RateThrottler.#ctor(Alpaca.Markets.ThrottleParameters)">
            <summary>
            Creates new instance of <see cref="T:Alpaca.Markets.RateThrottler"/> object with parameters
            specified in <paramref name="throttleParameters"/> parameter.
            </summary>
            <param name="throttleParameters"></param>
        </member>
        <member name="M:Alpaca.Markets.RateThrottler.Dispose">
            <inheritdoc />
        </member>
        <member name="P:Alpaca.Markets.RateThrottler.MaxRetryAttempts">
            <inheritdoc />
        </member>
        <member name="M:Alpaca.Markets.RateThrottler.WaitToProceed(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Alpaca.Markets.RateThrottler.CheckHttpResponse(System.Net.Http.HttpResponseMessage)">
            <inheritdoc />
        </member>
        <member name="T:Alpaca.Markets.ThrottleParameters">
            <summary>
            Helper class for storing parameters required for initializing rate throttler in <see cref="T:Alpaca.Markets.AlpacaTradingClient"/> class.
            </summary>
        </member>
        <member name="M:Alpaca.Markets.ThrottleParameters.#ctor(System.Nullable{System.Int32},System.Nullable{System.TimeSpan},System.Nullable{System.Int32},System.Collections.Generic.IEnumerable{System.Int32})">
            <summary>
            Creates new instance of <see cref="T:Alpaca.Markets.ThrottleParameters"/> object.
            </summary>
            <param name="occurrences"></param>
            <param name="timeUnit"></param>
            <param name="maxRetryAttempts"></param>
            <param name="retryHttpStatuses"></param>
        </member>
        <member name="P:Alpaca.Markets.ThrottleParameters.Occurrences">
            <summary>
            Gets or sets number of occurrences per unit time.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.ThrottleParameters.TimeUnit">
            <summary>
            Gets or sets throttling time interval.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.ThrottleParameters.MaxRetryAttempts">
            <summary>
            Gets or sets maximal number of retry attempts for single request.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.ThrottleParameters.RetryHttpStatuses">
            <summary>
            Gets or sets list of Http status codes which when received should initiate a retry of the affected request
            </summary>
        </member>
        <member name="P:Alpaca.Markets.ThrottleParameters.Default">
            <summary>
            Gets throttle parameters initialized with default values or from configuration file.
            </summary>
        </member>
        <member name="T:Alpaca.Markets.IStreamingClientBase">
            <summary>
            Provides unified type-safe access for websocket streaming APIs.
            </summary>
        </member>
        <member name="E:Alpaca.Markets.IStreamingClientBase.Connected">
            <summary>
            Occured when stream successfully connected.
            </summary>
        </member>
        <member name="E:Alpaca.Markets.IStreamingClientBase.SocketOpened">
            <summary>
            Occured when underlying web socket successfully opened.
            </summary>
        </member>
        <member name="E:Alpaca.Markets.IStreamingClientBase.SocketClosed">
            <summary>
            Occured when underlying web socket successfully closed.
            </summary>
        </member>
        <member name="E:Alpaca.Markets.IStreamingClientBase.OnError">
            <summary>
            Occured when any error happened in stream.
            </summary>
        </member>
        <member name="M:Alpaca.Markets.IStreamingClientBase.ConnectAsync(System.Threading.CancellationToken)">
            <summary>
            Opens connection to a streaming API.
            </summary>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
            <returns>Awaitable task object for handling action completion in asynchronous mode.</returns>
        </member>
        <member name="M:Alpaca.Markets.IStreamingClientBase.ConnectAndAuthenticateAsync(System.Threading.CancellationToken)">
            <summary>
            Opens connection to a streaming API and awaits for authentication response.
            </summary>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
            <returns>Awaitable task object for handling client authentication event in asynchronous mode.</returns>
        </member>
        <member name="M:Alpaca.Markets.IStreamingClientBase.DisconnectAsync(System.Threading.CancellationToken)">
            <summary>
            Closes connection to a streaming API.
            </summary>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
            <returns>Awaitable task object for handling action completion in asynchronous mode.</returns>
        </member>
        <member name="T:Alpaca.Markets.IWebSocket">
            <summary>
            Encapsulate logic required for communicating with web socket server from API.
            </summary>
        </member>
        <member name="M:Alpaca.Markets.IWebSocket.OpenAsync(System.Threading.CancellationToken)">
            <summary>
            Opens web socket communication channel. Connection state changes will be reported
            using <see cref="E:Alpaca.Markets.IWebSocket.Opened"/> event and errors - using <see cref="E:Alpaca.Markets.IWebSocket.Error"/> event.
            </summary>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
            <returns>Connection opening task for awaiting (if needed).</returns>
        </member>
        <member name="M:Alpaca.Markets.IWebSocket.CloseAsync(System.Threading.CancellationToken)">
            <summary>
            Closes web socket communication channel. Connection state changes will be reported
            using <see cref="E:Alpaca.Markets.IWebSocket.Closed"/> event and errors - using <see cref="E:Alpaca.Markets.IWebSocket.Error"/> event.
            </summary>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
            <returns>Connection closing task for awaiting (if needed).</returns>
        </member>
        <member name="M:Alpaca.Markets.IWebSocket.Send(System.String)">
            <summary>
            Sends text message into opened web socket connection.
            </summary>
            <param name="message"></param>
        </member>
        <member name="E:Alpaca.Markets.IWebSocket.Opened">
            <summary>
            Occurred after successful web socket connection (at protocol level).
            </summary>
        </member>
        <member name="E:Alpaca.Markets.IWebSocket.Closed">
            <summary>
            Occurred after successful web socket disconnection (at protocol level).
            </summary>
        </member>
        <member name="E:Alpaca.Markets.IWebSocket.DataReceived">
            <summary>
            Occurred on each new completed web socket message receiving data or text.
            </summary>
        </member>
        <member name="E:Alpaca.Markets.IWebSocket.MessageReceived">
            <summary>
            Occurred on each new completed web socket message receiving text.
            </summary>
        </member>
        <member name="E:Alpaca.Markets.IWebSocket.Error">
            <summary>
            Occurred in case of any communication errors (on opening/close/listening/send).
            </summary>
        </member>
        <member name="T:Alpaca.Markets.IWebSocketFactory">
            <summary>
            Provides way for creating instance of <see cref="T:Alpaca.Markets.IWebSocket"/> interface implementation.
            </summary>
        </member>
        <member name="M:Alpaca.Markets.IWebSocketFactory.CreateWebSocket(System.Uri)">
            <summary>
            Creates new instance of <see cref="T:Alpaca.Markets.IWebSocket"/> interface implementation.
            </summary>
            <param name="url">Base URL for underlying web socket connection.</param>
            <returns>Instance of class which implements <see cref="T:Alpaca.Markets.IWebSocket"/> interface.</returns>
        </member>
        <member name="T:Alpaca.Markets.StreamingClientBase`1">
            <summary>
            Provides unified type-safe access for websocket streaming APIs.
            </summary>
        </member>
        <member name="M:Alpaca.Markets.StreamingClientBase`1.#ctor(`0)">
            <summary>
            Creates new instance of <see cref="T:Alpaca.Markets.StreamingClientBase`1"/> object.
            </summary>
            <param name="configuration"></param>
        </member>
        <member name="E:Alpaca.Markets.StreamingClientBase`1.Connected">
            <inheritdoc />
        </member>
        <member name="E:Alpaca.Markets.StreamingClientBase`1.SocketOpened">
            <inheritdoc />
        </member>
        <member name="E:Alpaca.Markets.StreamingClientBase`1.SocketClosed">
            <inheritdoc />
        </member>
        <member name="E:Alpaca.Markets.StreamingClientBase`1.OnError">
            <inheritdoc />
        </member>
        <member name="M:Alpaca.Markets.StreamingClientBase`1.ConnectAsync(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Alpaca.Markets.StreamingClientBase`1.ConnectAndAuthenticateAsync(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Alpaca.Markets.StreamingClientBase`1.DisconnectAsync(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Alpaca.Markets.StreamingClientBase`1.Dispose">
            <inheritdoc />
        </member>
        <member name="M:Alpaca.Markets.StreamingClientBase`1.OnOpened">
            <summary>
            Handles <see cref="E:Alpaca.Markets.IWebSocket.Opened"/> event.
            </summary>
        </member>
        <member name="M:Alpaca.Markets.StreamingClientBase`1.OnClosed">
            <summary>
            Handles <see cref="E:Alpaca.Markets.IWebSocket.Closed"/> event.
            </summary>
        </member>
        <member name="M:Alpaca.Markets.StreamingClientBase`1.OnMessageReceived(System.String)">
            <summary>
            Handles <see cref="E:Alpaca.Markets.IWebSocket.MessageReceived"/> event.
            </summary>
            <param name="message">Incoming string message for processing.</param>
        </member>
        <member name="M:Alpaca.Markets.StreamingClientBase`1.Dispose(System.Boolean)">
            <summary>
            Implement <see cref="T:System.IDisposable"/> pattern for inheritable classes.
            </summary>
            <param name="disposing">If <c>true</c> - dispose managed objects.</param>
        </member>
        <member name="M:Alpaca.Markets.StreamingClientBase`1.HandleMessage``1(System.Collections.Generic.IDictionary{``0,System.Action{Newtonsoft.Json.Linq.JToken}},``0,Newtonsoft.Json.Linq.JToken)">
            <summary>
            Handles single incoming message. Select handler from generic handlers map
            <paramref name="handlers"/> using <paramref name="messageType"/> parameter
            as a key and pass <paramref name="message"/> parameter as value into the
            selected handler. All exceptions are caught inside this method and reported
            to client via standard <see cref="E:Alpaca.Markets.StreamingClientBase`1.OnError"/> event.
            </summary>
            <param name="handlers">Message handlers map.</param>
            <param name="messageType">Message type for selecting handler from map.</param>
            <param name="message">Message data for processing by selected handler.</param>
        </member>
        <member name="M:Alpaca.Markets.StreamingClientBase`1.OnConnected(Alpaca.Markets.AuthStatus)">
            <summary>
            Raises <see cref="E:Alpaca.Markets.StreamingClientBase`1.Connected"/> event with specified <paramref name="authStatus"/> value.
            </summary>
            <param name="authStatus">Authentication status (protocol level) of client.</param>
        </member>
        <member name="M:Alpaca.Markets.StreamingClientBase`1.HandleError(System.Exception)">
            <summary>
            Handles <see cref="E:Alpaca.Markets.IWebSocket.Error"/> event.
            </summary>
            <param name="exception">Exception for routing into <see cref="E:Alpaca.Markets.StreamingClientBase`1.OnError"/> event.</param>
        </member>
        <member name="M:Alpaca.Markets.StreamingClientBase`1.SendAsJsonString(System.Object)">
            <summary>
            
            </summary>
            <param name="value"></param>
        </member>
    </members>
</doc>
